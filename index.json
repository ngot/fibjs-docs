[
{
	"uri": "http://example.org/",
	"title": "Home",
	"tags": [],
	"description": "",
	"content": "Summary Members Descriptions namespaceassert Assertion test module, if testing result is false, you will get an error. The way of handling error can be set as continue or throw exception. namespacebase32 base32 module with encode and decode operations. to use: namespacebase64 base64 module with encode and decode operations. to use: namespacebase64vlq base64vlq module with encode and decode operations. to use: namespacebson bson module with encode and decode operations. to use: namespaceconsole console module namespacecoroutine Concurrency control module. namespacecrypto Encryption algorithm module. namespacedb Database access module. namespaceencoding module with encode and decode operations between hex and other format data. to use: namespacefs file system module namespacegd Image processing module. namespaceglobal Global object, which can be accessed by all scripts. namespacehash Message digest calculation module, can be used to calculate the message digest and summary Signature. namespacehex module with encode and decode operations between hex and string. to use: namespacehttp HTTP transfer protocol module, handels http protocol. namespaceiconv iconv Module with encode and decode operations between text and binary. to use: namespaceio IO module. namespacejson json module with encode and decode operations. to use: namespacemq Message queue module. namespacenet Network module. namespaceos Operating system and file system module. namespacepath File path module. namespaceprocess Process handle module, to manage current process resources. namespaceprofiler Memory profiler module. namespacere Regexp module. namespacerpc RPC module. namespacessl ssl/tls module namespacetest Test Suite module that defines the test suite management. namespaceutil Common tools module. namespaceuuid uuid unique id module namespacevm Safe SandBox module, to isolate runtime based on safety level. namespacewebsocket websocket support module namespacexml xml module namespacezip Zip file processing module. namespacezlib zlib compression and decompression module classAsyncWait MessageHandler object for asynchronous waiting. classBuffer Binary buffer used in dealing with I/O reading and writing. "
},
{
	"uri": "http://example.org/modules/",
	"title": "Modules",
	"tags": [],
	"description": "",
	"content": "A bunch of Modules are available with this theme : assert Assertion test module, if testing result is false, you will get an error. The way of handling error can be set as continue or throw exception. base32 module with encode and decode operations. base64 module with encode and decode operations. base64vlq module with encode and decode operations. bson bson module with encode and decode operations. console Global reference. Console can be used to log info, warnings and errors. Log can be trace on different device when initialized from config files for tracking. coroutine Concurrency control module. crypto Encryption algorithm module. db Database access module. encoding module with encode and decode operations between hex and other format data. fs file system module. gd Image processing module. global Global object, which can be accessed by all scripts. hash digest calculation module, can be used to calculate the message digest and summary Signature. hex Module with encode and decode operations between hex and string. http HTTP transfer protocol module, handels http protocol. iconv iconv Module with encode and decode operations between text and binary. io IO module. json Json module with encode and decode operations. mq Message queue module. net Network module. os Operating system and file system module. path File path module. process Process handle module, to manage current process resources. profiler Memory profiler module. re Regexp module. ssl ssl/tls module test Test Suite module that defines the test suite management. util Common tools module. uuid uuid unique id module. vm Safe SandBox module, to isolate runtime based on safety level. websocket websocket support module. xml xml module. zip Zip file processing module. zlib zlib compression and decompression module "
},
{
	"uri": "http://example.org/objects/",
	"title": "Objects",
	"tags": [],
	"description": "",
	"content": "Objects : AsyncWait AsyncWait Object Buffer Buffer ObjectBuffer ObjectBuffer ObjectBuffer ObjectBuffer ObjectBuffer ObjectBuffer Object "
},
{
	"uri": "http://example.org/_header/",
	"title": "header",
	"tags": [],
	"description": "",
	"content": "Fibjs Documentation "
},
{
	"uri": "http://example.org/object/asyncwait/",
	"title": "AsyncWait",
	"tags": [],
	"description": "AsyncWait Object",
	"content": "class AsyncWait class AsyncWait : public Handler MessageHandler object for asynchronous waiting. Summary Members Descriptions publicend() Finish waiting, moving on to handle the message. publicHandlerinvoke(objectv) handle a message or an object publicdispose() Force dispose object immediately. public StringtoString() Return string representation of object, normally is &amp;ldquo;[Native Object]&amp;rdquo; and can be implemented by object itself. public ValuetoJSON(String key) Return JSON representation of object, normally is readable attributes collection. public ValuevalueOf() Return JSON representation of object. Members publicend() Finish waiting, moving on to handle the message. publicHandlerinvoke(objectv) handle a message or an object Parameters v specify the message or object to be handled Returns return the handler of the next step publicdispose() Force dispose object immediately. public StringtoString() Return string representation of object, normally is &amp;ldquo;[Native Object]&amp;rdquo; and can be implemented by object itself. Returns Return string representation public ValuetoJSON(String key) Return JSON representation of object, normally is readable attributes collection. Parameters key Not used Returns Return JSON representation public ValuevalueOf() Return JSON representation of object. Returns Return JSON representation of object "
},
{
	"uri": "http://example.org/object/buffer/",
	"title": "Buffer",
	"tags": [],
	"description": "Buffer ObjectBuffer ObjectBuffer ObjectBuffer ObjectBuffer ObjectBuffer ObjectBuffer Object",
	"content": "class Buffer class Buffer : public object Binary buffer used in dealing with I/O reading and writing. Buffer object is a global basic class which can be created by &amp;ldquo;new Buffer(&amp;hellip;)&amp;rdquo; at anytime: var buf = new Buffer(); Summary Members Descriptions public Integeroperator[] The binary data in the buffer can be accessed by using subscript. public readonly Integerlength The buffer size. publicBuffer(Array datas) Buffer constructor. publicBuffer(Bufferbuffer) Buffer constructor. publicBuffer(String str,String codec) Buffer constructor. publicBuffer(Integer size) Buffer constructor. publicresize(Integer sz) Resize the buffer. publicappend(Array datas) Write an array into the buffer. publicappend(Bufferdata) Write a set of binary data into the buffer. publicappend(String str,String codec) Write a string encoded in utf-8 into buffer. public Integerwrite(String str,Integer offset,Integer length,String codec) Writes string to the buffer at offset using the given encoding. publicfill(Integer v,Integer offset,Integer end) Fill the buffer with the specified objects. publicfill(Bufferv,Integer offset,Integer end) Fill the buffer with the specified objects. publicfill(String v,Integer offset,Integer end) Fill the buffer with the specified objects. public Booleanequals(Bufferbuf) Whether this and otherBuffer have the same bytes. public Integercompare(Bufferbuf) Compare the contents of the buffer. public Integercopy(BuffertargetBuffer,Integer targetStart,Integer sourceStart,Integer sourceEnd) Copies data from a region of this buffer to a region in the target buffer even if the target memory region overlaps with the source. If undefined the targetStart and sourceStart parameters default to 0 while sourceEnd defaults to buffer.length. public IntegerreadUInt8(Integer offset,Boolean noAssert) Read an unsigned 8-bit integer from the buffer. public IntegerreadUInt16LE(Integer offset,Boolean noAssert) Read an unsigned 16-bit integer from the buffer and use the little-endian format for storage. public IntegerreadUInt16BE(Integer offset,Boolean noAssert) Read an unsigned 16-bit integer from the buffer and use the big-endian format for storage. public LongreadUInt32LE(Integer offset,Boolean noAssert) Read an unsigned 32-bit integer from the buffer and use the little-endian format for storage. public LongreadUInt32BE(Integer offset,Boolean noAssert) Read an unsigned 32-bit integer from the buffer and use the big-endian format for storage. public IntegerreadInt8(Integer offset,Boolean noAssert) Read an 8-bit integer from the buffer. public IntegerreadInt16LE(Integer offset,Boolean noAssert) Read an 16-bit integer from the buffer and use the little-endian format for storage. public IntegerreadInt16BE(Integer offset,Boolean noAssert) Read an 16-bit integer from the buffer and use the big-endian format for storage. public IntegerreadInt32LE(Integer offset,Boolean noAssert) Read an 32-bit integer from the buffer and use the little-endian format for storage. public IntegerreadInt32BE(Integer offset,Boolean noAssert) Read an 32-bit integer from the buffer and use the big-endian format for storage. publicInt64readInt64LE(Integer offset,Boolean noAssert) Read an 64-bit integer from the buffer and use the little-endian format for storage. publicInt64readInt64BE(Integer offset,Boolean noAssert) Read an 64-bit integer from the buffer and use the big-endian format for storage. public NumberreadFloatLE(Integer offset,Boolean noAssert) Read a float from the buffer and use the little-endian format for storage. public NumberreadFloatBE(Integer offset,Boolean noAssert) Read a float from the buffer and use the big-endian format for storage. public NumberreadDoubleLE(Integer offset,Boolean noAssert) Read a double from the buffer and use the little-endian format for storage. public NumberreadDoubleBE(Integer offset,Boolean noAssert) Read a double from the buffer and use the big-endian format for storage. publicwriteUInt8(Integer value,Integer offset,Boolean noAssert) Write an unsigned 8-bit integer into the buffer. publicwriteUInt16LE(Integer value,Integer offset,Boolean noAssert) Write an unsigned 16-bit integer into the buffer and use the little-endian format for storage. publicwriteUInt16BE(Integer value,Integer offset,Boolean noAssert) Write an unsigned 16-bit integer into the buffer and use the big-endian format for storage. publicwriteUInt32LE(Long value,Integer offset,Boolean noAssert) Write an unsigned 32-bit integer into the buffer and use the little-endian format for storage. publicwriteUInt32BE(Long value,Integer offset,Boolean noAssert) Write an unsigned 32-bit integer into the buffer and use the big-endian format for storage. publicwriteInt8(Integer value,Integer offset,Boolean noAssert) Write an 8-bit integer into the buffer. publicwriteInt16LE(Integer value,Integer offset,Boolean noAssert) Write a 16-bit integer into the buffer and use the little-endian format for storage. publicwriteInt16BE(Integer value,Integer offset,Boolean noAssert) Write a 16-bit integer into the buffer and use the big-endian format for storage. publicwriteInt32LE(Integer value,Integer offset,Boolean noAssert) Write a 32-bit integer into the buffer and use the little-endian format for storage. publicwriteInt32BE(Integer value,Integer offset,Boolean noAssert) Write a 32-bit integer into the buffer and use the big-endian format for storage. publicwriteInt64LE(Int64value,Integer offset,Boolean noAssert) Write a 64-bit integer into the buffer and use the little-endian format for storage. publicwriteInt64BE(Int64value,Integer offset,Boolean noAssert) Write a 64-bit integer into the buffer and use the big-endian format for storage. publicwriteFloatLE(Number value,Integer offset,Boolean noAssert) Write a float into the buffer and use the little-endian format for storage. publicwriteFloatBE(Number value,Integer offset,Boolean noAssert) Write a float into the buffer and use the big-endian format for storage. publicwriteDoubleLE(Number value,Integer offset,Boolean noAssert) Write a double into the buffer and use the little-endian format for storage. publicwriteDoubleBE(Number value,Integer offset,Boolean noAssert) Write a double into the buffer and use the big-endian format for storage. publicBufferslice(Integer start,Integer end) return a new buffer that contains data in the specified range. If the data is out of range of the buffer, return the available part of the data. public Stringhex() Store the data in the buffer with hexadecimal encoding? public Stringbase64() Store the data in the buffer with base64 encoding? public StringtoString(String codec,Integer offset,Integer end) return the encoded string of the binary data public StringtoString() return the utf8-encoded string of the binary data publicdispose() Force dispose object immediately. public ValuetoJSON(String key) Return JSON representation of object, normally is readable attributes collection. public ValuevalueOf() Return JSON representation of object. Members public Integeroperator[] The binary data in the buffer can be accessed by using subscript. public readonly Integerlength The buffer size. publicBuffer(Array datas) Buffer constructor. Parameters datas Initial data array publicBuffer(Bufferbuffer) Buffer constructor. Parameters buffer otherBuffer publicBuffer(String str,String codec) Buffer constructor. Parameters str Initial string encoded in UTF-8, by default it will create an empty object. codec The encode format, can be &amp;ldquo;hex&amp;rdquo;, “base64”, &amp;ldquo;utf8&amp;rdquo; or any other character sets supported by the system. publicBuffer(Integer size) Buffer constructor. Parameters size Initial cache size publicresize(Integer sz) Resize the buffer. Parameters sz New size publicappend(Array datas) Write an array into the buffer. Parameters datas Initial data array publicappend(Bufferdata) Write a set of binary data into the buffer. Parameters data Initial binary data publicappend(String str,String codec) Write a string encoded in utf-8 into buffer. Parameters str String to write codec Coded format, can be &amp;ldquo;hex&amp;rdquo;, “base64”, &amp;ldquo;utf8&amp;rdquo; or any other character sets supported by the system. public Integerwrite(String str,Integer offset,Integer length,String codec) Writes string to the buffer at offset using the given encoding. Parameters str String - data to be written to buffer offset Number, Optional, Default 0 length Number, Optional, Default -1 codec Coded format, can be &amp;ldquo;hex&amp;rdquo;, “base64”, &amp;ldquo;utf8&amp;rdquo; or any other character sets supported Returns Returns number of octets written. publicfill(Integer v,Integer offset,Integer end) Fill the buffer with the specified objects. Parameters v Data intend to be filled, and will fill the entire buffer when the offset and end is not specified. offset Number, Optional, Default 0 end Number, Optional, Default -1 publicfill(Bufferv,Integer offset,Integer end) Fill the buffer with the specified objects. Parameters v Data intend to be filled, and will fill the entire buffer when the offset and end is not specified. offset Number, Optional, Default 0 end Number, Optional, Default -1 publicfill(String v,Integer offset,Integer end) Fill the buffer with the specified objects. Parameters v Data intend to be filled, and will fill the entire buffer when the offset and end is not specified. offset Number, Optional, Default 0 end Number, Optional, Default -1 public Booleanequals(Bufferbuf) Whether this and otherBuffer have the same bytes. Parameters buf otherBuffer Returns Returns a boolean of whether this and otherBuffer have the same bytes. public Integercompare(Bufferbuf) Compare the contents of the buffer. Parameters buf otherBuffer Returns Returns a number indicating whether this comes before or after or is the same as the otherBuffer in sort order. public Integercopy(BuffertargetBuffer,Integer targetStart,Integer sourceStart,Integer sourceEnd) Copies data from a region of this buffer to a region in the target buffer even if the target memory region overlaps with the source. If undefined the targetStart and sourceStart parameters default to 0 while sourceEnd defaults to buffer.length. Parameters targetBuffer Buffer object - Buffer to copy into targetStart Number, Optional, Default: 0 sourceStart Number, Optional, Default: 0 sourceEnd Number, Optional, Default: -1, represent buffer.length Returns Copied data byte length public IntegerreadUInt8(Integer offset,Boolean noAssert) Read an unsigned 8-bit integer from the buffer. Parameters offset The beginning of the address to read noAssert If true, then do not throw an error when overread. By default it&amp;rsquo;s false. Returns The targeted integer public IntegerreadUInt16LE(Integer offset,Boolean noAssert) Read an unsigned 16-bit integer from the buffer and use the little-endian format for storage. Parameters offset The beginning of the address to read noAssert If true, then do not throw an error when overread. By default it&amp;rsquo;s false. Returns The targeted integer public IntegerreadUInt16BE(Integer offset,Boolean noAssert) Read an unsigned 16-bit integer from the buffer and use the big-endian format for storage. Parameters offset The beginning of the address to read noAssert If true, then do not throw an error when overread. By default it&amp;rsquo;s false. Returns The targeted integer public LongreadUInt32LE(Integer offset,Boolean noAssert) Read an unsigned 32-bit integer from the buffer and use the little-endian format for storage. Parameters offset The beginning of the address to read noAssert If true, then do not throw an error when overread. By default it&amp;rsquo;s false. Returns The targeted integer public LongreadUInt32BE(Integer offset,Boolean noAssert) Read an unsigned 32-bit integer from the buffer and use the big-endian format for storage. Parameters offset The beginning of the address to read noAssert If true, then do not throw an error when overread. By default it&amp;rsquo;s false. Returns The targeted integer public IntegerreadInt8(Integer offset,Boolean noAssert) Read an 8-bit integer from the buffer. Parameters offset The beginning of the address to read noAssert If true, then do not throw an error when overread. By default it&amp;rsquo;s false. Returns The targeted integer public IntegerreadInt16LE(Integer offset,Boolean noAssert) Read an 16-bit integer from the buffer and use the little-endian format for storage. Parameters offset The beginning of the address to read noAssert If true, then do not throw an error when overread. By default it&amp;rsquo;s false. Returns The targeted integer public IntegerreadInt16BE(Integer offset,Boolean noAssert) Read an 16-bit integer from the buffer and use the big-endian format for storage. Parameters offset The beginning of the address to read noAssert If true, then do not throw an error when overread. By default it&amp;rsquo;s false. Returns The targeted integer public IntegerreadInt32LE(Integer offset,Boolean noAssert) Read an 32-bit integer from the buffer and use the little-endian format for storage. Parameters offset The beginning of the address to read noAssert If true, then do not throw an error when overread. By default it&amp;rsquo;s false. Returns The targeted integer public IntegerreadInt32BE(Integer offset,Boolean noAssert) Read an 32-bit integer from the buffer and use the big-endian format for storage. Parameters offset The beginning of the address to read noAssert If true, then do not throw an error when overread. By default it&amp;rsquo;s false. Returns The targeted integer publicInt64readInt64LE(Integer offset,Boolean noAssert) Read an 64-bit integer from the buffer and use the little-endian format for storage. Parameters offset The beginning of the address to read noAssert If true, then do not throw an error when overread. By default it&amp;rsquo;s false. Returns The targeted integer publicInt64readInt64BE(Integer offset,Boolean noAssert) Read an 64-bit integer from the buffer and use the big-endian format for storage. Parameters offset The beginning of the address to read noAssert If true, then do not throw an error when overread. By default it&amp;rsquo;s false. Returns The targeted integer public NumberreadFloatLE(Integer offset,Boolean noAssert) Read a float from the buffer and use the little-endian format for storage. Parameters offset The beginning of the address to read noAssert If true, then do not throw an error when overread. By default it&amp;rsquo;s false. Returns The targeted float public NumberreadFloatBE(Integer offset,Boolean noAssert) Read a float from the buffer and use the big-endian format for storage. Parameters offset The beginning of the address to read noAssert If true, then do not throw an error when overread. By default it&amp;rsquo;s false. Returns The targeted float public NumberreadDoubleLE(Integer offset,Boolean noAssert) Read a double from the buffer and use the little-endian format for storage. Parameters offset The beginning of the address to read noAssert If true, then do not throw an error when overread. By default it&amp;rsquo;s false. Returns The targeted double public NumberreadDoubleBE(Integer offset,Boolean noAssert) Read a double from the buffer and use the big-endian format for storage. Parameters offset The beginning of the address to read noAssert If true, then do not throw an error when overread. By default it&amp;rsquo;s false. Returns The targeted double publicwriteUInt8(Integer value,Integer offset,Boolean noAssert) Write an unsigned 8-bit integer into the buffer. Parameters value The value to write offset The beginning of the address to write noAssert If true, then do not throw an error when overwrite. By default it&amp;rsquo;s false. publicwriteUInt16LE(Integer value,Integer offset,Boolean noAssert) Write an unsigned 16-bit integer into the buffer and use the little-endian format for storage. Parameters value The value to write offset The beginning of the address to write noAssert If true, then do not throw an error when overwrite. By default it&amp;rsquo;s false. publicwriteUInt16BE(Integer value,Integer offset,Boolean noAssert) Write an unsigned 16-bit integer into the buffer and use the big-endian format for storage. Parameters value The value to write offset The beginning of the address to write noAssert If true, then do not throw an error when overwrite. By default it&amp;rsquo;s false. publicwriteUInt32LE(Long value,Integer offset,Boolean noAssert) Write an unsigned 32-bit integer into the buffer and use the little-endian format for storage. Parameters value The value to write offset The beginning of the address to write noAssert If true, then do not throw an error when overwrite. By default it&amp;rsquo;s false. publicwriteUInt32BE(Long value,Integer offset,Boolean noAssert) Write an unsigned 32-bit integer into the buffer and use the big-endian format for storage. Parameters value The value to write offset The beginning of the address to write noAssert If true, then do not throw an error when overwrite. By default it&amp;rsquo;s false. publicwriteInt8(Integer value,Integer offset,Boolean noAssert) Write an 8-bit integer into the buffer. Parameters value The value to write offset The beginning of the address to write noAssert If true, then do not throw an error when overwrite. By default it&amp;rsquo;s false. publicwriteInt16LE(Integer value,Integer offset,Boolean noAssert) Write a 16-bit integer into the buffer and use the little-endian format for storage. Parameters value The value to write offset The beginning of the address to write noAssert If true, then do not throw an error when overwrite. By default it&amp;rsquo;s false. publicwriteInt16BE(Integer value,Integer offset,Boolean noAssert) Write a 16-bit integer into the buffer and use the big-endian format for storage. Parameters value The value to write offset The beginning of the address to write noAssert If true, then do not throw an error when overwrite. By default it&amp;rsquo;s false. publicwriteInt32LE(Integer value,Integer offset,Boolean noAssert) Write a 32-bit integer into the buffer and use the little-endian format for storage. Parameters value The value to write offset The beginning of the address to write noAssert If true, then do not throw an error when overwrite. By default it&amp;rsquo;s false. publicwriteInt32BE(Integer value,Integer offset,Boolean noAssert) Write a 32-bit integer into the buffer and use the big-endian format for storage. Parameters value The value to write offset The beginning of the address to write noAssert If true, then do not throw an error when overwrite. By default it&amp;rsquo;s false. publicwriteInt64LE(Int64value,Integer offset,Boolean noAssert) Write a 64-bit integer into the buffer and use the little-endian format for storage. Parameters value The value to write offset The beginning of the address to write noAssert If true, then do not throw an error when overwrite. By default it&amp;rsquo;s false. publicwriteInt64BE(Int64value,Integer offset,Boolean noAssert) Write a 64-bit integer into the buffer and use the big-endian format for storage. Parameters value The value to write offset The beginning of the address to write noAssert If true, then do not throw an error when overwrite. By default it&amp;rsquo;s false. publicwriteFloatLE(Number value,Integer offset,Boolean noAssert) Write a float into the buffer and use the little-endian format for storage. Parameters value The value to write offset The beginning of the address to write noAssert If true, then do not throw an error when overwrite. By default it&amp;rsquo;s false. publicwriteFloatBE(Number value,Integer offset,Boolean noAssert) Write a float into the buffer and use the big-endian format for storage. Parameters value The value to write offset The beginning of the address to write noAssert If true, then do not throw an error when overwrite. By default it&amp;rsquo;s false. publicwriteDoubleLE(Number value,Integer offset,Boolean noAssert) Write a double into the buffer and use the little-endian format for storage. Parameters value The value to write offset The beginning of the address to write noAssert If true, then do not throw an error when overwrite. By default it&amp;rsquo;s false. publicwriteDoubleBE(Number value,Integer offset,Boolean noAssert) Write a double into the buffer and use the big-endian format for storage. Parameters value The value to write offset The beginning of the address to write noAssert If true, then do not throw an error when overwrite. By default it&amp;rsquo;s false. publicBufferslice(Integer start,Integer end) return a new buffer that contains data in the specified range. If the data is out of range of the buffer, return the available part of the data. Parameters start The start of the specified range, by default it&amp;rsquo;s the beginning of the buffer end The end of the specified range, by default it&amp;rsquo;s the end of the buffer public Stringhex() Store the data in the buffer with hexadecimal encoding? Returns The encoded string public Stringbase64() Store the data in the buffer with base64 encoding? Returns The encoded string public StringtoString(String codec,Integer offset,Integer end) return the encoded string of the binary data Parameters codec The encode format, can be &amp;ldquo;hex&amp;rdquo;, “base64”, &amp;ldquo;utf8&amp;rdquo; or any other character sets supported by the system. offset The start position of string, Default: 0 end The end position of string, Default: -1 Returns The string representing the value of the buffer. public StringtoString() return the utf8-encoded string of the binary data Returns The string representing the value of the buffer. publicdispose() Force dispose object immediately. public ValuetoJSON(String key) Return JSON representation of object, normally is readable attributes collection. Parameters key Not used Returns Return JSON representation public ValuevalueOf() Return JSON representation of object. Returns Return JSON representation of object "
},
{
	"uri": "http://example.org/categories/",
	"title": "Categories",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "http://example.org/module/",
	"title": "Modules",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "http://example.org/object/",
	"title": "Objects",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "http://example.org/tags/",
	"title": "Tags",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "http://example.org/module/assert/",
	"title": "assert",
	"tags": [],
	"description": "Assertion test module, if testing result is false, you will get an error. The way of handling error can be set as continue or throw exception.",
	"content": "Assertion test module, if testing result is false, you will get an error. The way of handling error can be set as continue or throw exception. how to use: var assert = require(&#39;assert&#39;); or using testing unit: var test = require(&#39;test&#39;); var assert = test.assert; or you can use test.setup to set up test: require(&amp;quot;test&amp;quot;).setup(); Summary Members Descriptions public static staticok(Value actual,String msg) Return true when the testing result is ture, assertion failed when return false. public static staticnotOk(Value actual,String msg) Return true when the testing result is false, assertion failed when return true. public static staticequal(Value actual,Value expected,String msg) Test value should match the expected one, assertion failed when not match. public static staticnotEqual(Value actual,Value expected,String msg) Test value should not have to match the expected one, assertion failed when match. public static staticstrictEqual(Value actual,Value expected,String msg) Test value should strictly match the expected one, assertion failed when not match. public static staticnotStrictEqual(Value actual,Value expected,String msg) Test value should not have to strictly match the expected one, assertion failed when match. public static staticdeepEqual(Value actual,Value expected,String msg) Test value should deeply match the expected one, assertion failed when not match. public static staticnotDeepEqual(Value actual,Value expected,String msg) Test value should not have to deeply match the expected one, assertion failed when match. public static staticcloseTo(Value actual,Value expected,Value delta,String msg) Test value should closely match the expected one, assertion failed when not match. public static staticnotCloseTo(Value actual,Value expected,Value delta,String msg) Test value should not have to closely match the expected one, assertion failed when match. public static staticlessThan(Value actual,Value expected,String msg) Test value should less than the expected one, assertion failed when get a greater or equal one. public static staticnotLessThan(Value actual,Value expected,String msg) Test value should not have to less than the expected one, assertion failed when get a less one. public static staticgreaterThan(Value actual,Value expected,String msg) Test value should greater than the expected one, assertion failed when get a less or equal one. public static staticnotGreaterThan(Value actual,Value expected,String msg) Test value should not have to greater than the expected one, assertion failed when get a greater one. public static staticexist(Value actual,String msg) Test value should be an existed one, assertion failed when the value is not existed. public static staticnotExist(Value actual,String msg) Test value should not be an existed one, assertion failed when the value is existed. public static staticisTrue(Value actual,String msg) Test value should be the Boolean true, assertion failed when the value is false. public static staticisNotTrue(Value actual,String msg) Test value should be the Boolean false, assertion failed when the value is true. public static staticisFalse(Value actual,String msg) Test value should be the Boolean false, assertion failed when the value is true. public static staticisNotFalse(Value actual,String msg) Test value should be the Boolean true, assertion failed when the value is false. public static staticisNull(Value actual,String msg) Test value should be the null, assertion failed when the value is not null. public static staticisNotNull(Value actual,String msg) Test value should not be the null, assertion failed when the value is null. public static staticisUndefined(Value actual,String msg) Test value should be the undefined, assertion failed when the value is not undefined. public static staticisDefined(Value actual,String msg) Test value should not be the undefined, assertion failed when the value is undefined. public static staticisFunction(Value actual,String msg) The type of test value should be Function, assertion failed when the value is not a function. public static staticisNotFunction(Value actual,String msg) The type of test value should not be Function, assertion failed when the value is a function. public static staticisObject(Value actual,String msg) The type of test value should be Object, assertion failed when the value is not a object. public static staticisNotObject(Value actual,String msg) The type of test value should not be Object, assertion failed when the value is a object. public static staticisArray(Value actual,String msg) The type of test value should be Array, assertion failed when the value is not an array. public static staticisNotArray(Value actual,String msg) The type of test value should not be Array, assertion failed when the value is an array. public static staticisString(Value actual,String msg) The type of test value should be String, assertion failed when the value is not a string. public static staticisNotString(Value actual,String msg) The type of test value should not be String, assertion failed when the value is a string. public static staticisNumber(Value actual,String msg) The type of test value should be Number, assertion failed when the value is not a number. public static staticisNotNumber(Value actual,String msg) The type of test value should not be Number, assertion failed when the value is a number. public static staticisBoolean(Value actual,String msg) The type of test value should be Boolean, assertion failed when the value is not a boolean. public static staticisNotBoolean(Value actual,String msg) The type of test value should not be Boolean, assertion failed when the value is a boolean. public static statictypeOf(Value actual,String type,String msg) The type of test value should be the specified one, assertion failed when the value type is not match. public static staticnotTypeOf(Value actual,String type,String msg) The type of test value should not be the specified one, assertion failed when the value type is match. public static staticproperty(Value object,Value prop,String msg) The test value should contain the specified property, assertion failed when the property not be contained. public static staticnotProperty(Value object,Value prop,String msg) The test value should not contain the specified property, assertion failed when the property contained. public static staticdeepProperty(Value object,Value prop,String msg) The test value should deeply contain the specified property, assertion failed when the property not be contained. public static staticnotDeepProperty(Value object,Value prop,String msg) The test value should not deeply contain the specified property, assertion failed when the property contained. public static staticpropertyVal(Value object,Value prop,Value value,String msg) The specified property of test value should equal the given one, assertion failed when not match. public static staticpropertyNotVal(Value object,Value prop,Value value,String msg) The specified property of test value should not equal the given one, assertion failed when match. public static staticdeepPropertyVal(Value object,Value prop,Value value,String msg) The specified property of test value should deeply equal the given one, assertion failed when not match. public static staticdeepPropertyNotVal(Value object,Value prop,Value value,String msg) The specified property of test value should not deeply equal the given one, assertion failed when match. public static staticthrows(Function block,String msg) The block code should throw an error, assertion failed when not throw one. public static staticdoesNotThrow(Function block,String msg) The block code should not throw an error, assertion failed when throw one. Members public static staticok(Value actual,String msg) Return true when the testing result is ture, assertion failed when return false. Parameters actual The value need to be tested. msg The message of assertion failed when return false. public static staticnotOk(Value actual,String msg) Return true when the testing result is false, assertion failed when return true. Parameters actual The value need to be tested. msg The message of assertion failed when return false. public static staticequal(Value actual,Value expected,String msg) Test value should match the expected one, assertion failed when not match. Parameters actual The value need to be tested. expected The expected value. msg The message of assertion failed when return false. public static staticnotEqual(Value actual,Value expected,String msg) Test value should not have to match the expected one, assertion failed when match. Parameters actual The value need to be tested. expected The expected value. expected expected value from unittest msg The message of assertion failed when return false. public static staticstrictEqual(Value actual,Value expected,String msg) Test value should strictly match the expected one, assertion failed when not match. Parameters actual The value need to be tested. expected The expected value. msg The message of assertion failed when return false. public static staticnotStrictEqual(Value actual,Value expected,String msg) Test value should not have to strictly match the expected one, assertion failed when match. Parameters actual The value need to be tested. expected The expected value. msg The message of assertion failed when return false. public static staticdeepEqual(Value actual,Value expected,String msg) Test value should deeply match the expected one, assertion failed when not match. Parameters actual The value need to be tested. expected The expected value. msg The message of assertion failed when return false. public static staticnotDeepEqual(Value actual,Value expected,String msg) Test value should not have to deeply match the expected one, assertion failed when match. Parameters actual The value need to be tested. expected The expected value. msg The message of assertion failed when return false. public static staticcloseTo(Value actual,Value expected,Value delta,String msg) Test value should closely match the expected one, assertion failed when not match. Parameters actual The value need to be tested. expected The expected value. delta Approximate decimal precision. msg The message of assertion failed when return false. public static staticnotCloseTo(Value actual,Value expected,Value delta,String msg) Test value should not have to closely match the expected one, assertion failed when match. Parameters actual The value need to be tested. expected The expected value. delta Approximate decimal precision. msg The message of assertion failed when return false. public static staticlessThan(Value actual,Value expected,String msg) Test value should less than the expected one, assertion failed when get a greater or equal one. Parameters actual The value need to be tested. expected The expected value. msg The message of assertion failed when return false. public static staticnotLessThan(Value actual,Value expected,String msg) Test value should not have to less than the expected one, assertion failed when get a less one. Parameters actual The value need to be tested. expected The expected value. msg The message of assertion failed when return false. public static staticgreaterThan(Value actual,Value expected,String msg) Test value should greater than the expected one, assertion failed when get a less or equal one. Parameters actual The value need to be tested. expected The expected value. msg The message of assertion failed when return false. public static staticnotGreaterThan(Value actual,Value expected,String msg) Test value should not have to greater than the expected one, assertion failed when get a greater one. Parameters actual The value need to be tested. expected The expected value. msg The message of assertion failed when return false. public static staticexist(Value actual,String msg) Test value should be an existed one, assertion failed when the value is not existed. Parameters actual The value need to be tested. msg The message of assertion failed when return false. public static staticnotExist(Value actual,String msg) Test value should not be an existed one, assertion failed when the value is existed. Parameters actual The value need to be tested. msg The message of assertion failed when return false. public static staticisTrue(Value actual,String msg) Test value should be the Boolean true, assertion failed when the value is false. Parameters actual The value need to be tested. msg The message of assertion failed when return false. public static staticisNotTrue(Value actual,String msg) Test value should be the Boolean false, assertion failed when the value is true. Parameters actual The value need to be tested. msg The message of assertion failed when return false. public static staticisFalse(Value actual,String msg) Test value should be the Boolean false, assertion failed when the value is true. Parameters actual The value need to be tested. msg The message of assertion failed when return false. public static staticisNotFalse(Value actual,String msg) Test value should be the Boolean true, assertion failed when the value is false. Parameters actual The value need to be tested. msg The message of assertion failed when return false. public static staticisNull(Value actual,String msg) Test value should be the null, assertion failed when the value is not null. Parameters actual The value need to be tested. msg The message of assertion failed when return false. public static staticisNotNull(Value actual,String msg) Test value should not be the null, assertion failed when the value is null. Parameters actual The value need to be tested. msg The message of assertion failed when return false. public static staticisUndefined(Value actual,String msg) Test value should be the undefined, assertion failed when the value is not undefined. Parameters actual The value need to be tested. msg The message of assertion failed when return false. public static staticisDefined(Value actual,String msg) Test value should not be the undefined, assertion failed when the value is undefined. Parameters actual The value need to be tested. msg The message of assertion failed when return false. public static staticisFunction(Value actual,String msg) The type of test value should be Function, assertion failed when the value is not a function. Parameters actual The value need to be tested. msg The message of assertion failed when return false. public static staticisNotFunction(Value actual,String msg) The type of test value should not be Function, assertion failed when the value is a function. Parameters actual The value need to be tested. msg The message of assertion failed when return false. public static staticisObject(Value actual,String msg) The type of test value should be Object, assertion failed when the value is not a object. Parameters actual The value need to be tested. msg The message of assertion failed when return false. public static staticisNotObject(Value actual,String msg) The type of test value should not be Object, assertion failed when the value is a object. Parameters actual The value need to be tested. msg The message of assertion failed when return false. public static staticisArray(Value actual,String msg) The type of test value should be Array, assertion failed when the value is not an array. Parameters actual The value need to be tested. msg The message of assertion failed when return false. public static staticisNotArray(Value actual,String msg) The type of test value should not be Array, assertion failed when the value is an array. Parameters actual The value need to be tested. msg The message of assertion failed when return false. public static staticisString(Value actual,String msg) The type of test value should be String, assertion failed when the value is not a string. Parameters actual The value need to be tested. msg The message of assertion failed when return false. public static staticisNotString(Value actual,String msg) The type of test value should not be String, assertion failed when the value is a string. Parameters actual The value need to be tested. msg The message of assertion failed when return false. public static staticisNumber(Value actual,String msg) The type of test value should be Number, assertion failed when the value is not a number. Parameters actual The value need to be tested. msg The message of assertion failed when return false. public static staticisNotNumber(Value actual,String msg) The type of test value should not be Number, assertion failed when the value is a number. Parameters actual The value need to be tested. msg The message of assertion failed when return false. public static staticisBoolean(Value actual,String msg) The type of test value should be Boolean, assertion failed when the value is not a boolean. Parameters actual The value need to be tested. msg The message of assertion failed when return false. public static staticisNotBoolean(Value actual,String msg) The type of test value should not be Boolean, assertion failed when the value is a boolean. Parameters actual The value need to be tested. msg The message of assertion failed when return false. public static statictypeOf(Value actual,String type,String msg) The type of test value should be the specified one, assertion failed when the value type is not match. Parameters actual The value need to be tested. type Specified type. msg The message of assertion failed when return false. public static staticnotTypeOf(Value actual,String type,String msg) The type of test value should not be the specified one, assertion failed when the value type is match. Parameters actual The value need to be tested. type Specified type. msg The message of assertion failed when return false. public static staticproperty(Value object,Value prop,String msg) The test value should contain the specified property, assertion failed when the property not be contained. Parameters object The object to be tested. prop Property to be tested, fields terminated by &amp;lsquo;.&amp;rsquo; msg The message of assertion failed when return false. public static staticnotProperty(Value object,Value prop,String msg) The test value should not contain the specified property, assertion failed when the property contained. Parameters object The object to be tested. prop Property to be tested, fields terminated by &amp;lsquo;.&amp;rsquo; msg The message of assertion failed when return false. public static staticdeepProperty(Value object,Value prop,String msg) The test value should deeply contain the specified property, assertion failed when the property not be contained. Parameters object The object to be tested. prop Property to be tested, fields terminated by &amp;lsquo;.&amp;rsquo; msg The message of assertion failed when return false. public static staticnotDeepProperty(Value object,Value prop,String msg) The test value should not deeply contain the specified property, assertion failed when the property contained. Parameters object The object to be tested. prop Property to be tested, fields terminated by &amp;lsquo;.&amp;rsquo; msg The message of assertion failed when return false. public static staticpropertyVal(Value object,Value prop,Value value,String msg) The specified property of test value should equal the given one, assertion failed when not match. Parameters object The object to be tested. prop Property to be tested, fields terminated by &amp;lsquo;.&amp;rsquo; value Given value msg The message of assertion failed when return false. public static staticpropertyNotVal(Value object,Value prop,Value value,String msg) The specified property of test value should not equal the given one, assertion failed when match. Parameters object The object to be tested. prop Property to be tested, fields terminated by &amp;lsquo;.&amp;rsquo; value Given value msg The message of assertion failed when return false. public static staticdeepPropertyVal(Value object,Value prop,Value value,String msg) The specified property of test value should deeply equal the given one, assertion failed when not match. Parameters object The object to be tested. prop Property to be tested, fields terminated by &amp;lsquo;.&amp;rsquo; value Given value msg The message of assertion failed when return false. public static staticdeepPropertyNotVal(Value object,Value prop,Value value,String msg) The specified property of test value should not deeply equal the given one, assertion failed when match. Parameters object The object to be tested. prop Property to be tested, fields terminated by &amp;lsquo;.&amp;rsquo; value Given value msg The message of assertion failed when return false. public static staticthrows(Function block,String msg) The block code should throw an error, assertion failed when not throw one. Parameters block The code need to be test that specified as function. msg The message of assertion failed when return false. public static staticdoesNotThrow(Function block,String msg) The block code should not throw an error, assertion failed when throw one. Parameters block The code need to be test that specified as function. msg The message of assertion failed when return false. "
},
{
	"uri": "http://example.org/module/base32/",
	"title": "base32",
	"tags": [],
	"description": "module with encode and decode operations.",
	"content": "base32 module with encode and decode operations. to use: var encoding = require(&#39;encoding&#39;); var base32 = encoding.base32; or: var base32 = require(&#39;base32&#39;); Summary Members Descriptions public static Stringencode(Bufferdata) Encode buffer data to string with base32 format. public staticBufferdecode(String data) Decode string to binary data with base32 format. Members public static Stringencode(Bufferdata) Encode buffer data to string with base32 format. Parameters data Buffer data to be encoded. Returns The encoded result string. public staticBufferdecode(String data) Decode string to binary data with base32 format. Parameters data String to be decoded. Returns The decoded result binary data. "
},
{
	"uri": "http://example.org/module/base64/",
	"title": "base64",
	"tags": [],
	"description": "module with encode and decode operations.",
	"content": "base64 module with encode and decode operations. to use: var encoding = require(&#39;encoding&#39;); var base64 = encoding.base64; or: var base64 = require(&#39;base64&#39;); Summary Members Descriptions public static Stringencode(Bufferdata) Encode buffer data to string with base64 format. public staticBufferdecode(String data) Decode string to binary data with base64 format. Members public static Stringencode(Bufferdata) Encode buffer data to string with base64 format. Parameters data Buffer data to be encoded. Returns The encoded result string. public staticBufferdecode(String data) Decode string to binary data with base64 format. Parameters data String to be decoded. Returns The decoded result binary data. "
},
{
	"uri": "http://example.org/module/base64vlq/",
	"title": "base64vlq",
	"tags": [],
	"description": "module with encode and decode operations.",
	"content": "base64vlq module with encode and decode operations. to use: var encoding = require(&#39;encoding&#39;); var base64vlq = encoding.base64vlq; or: var base64vlq = require(&#39;base64vlq&#39;); Summary Members Descriptions public static Stringencode(Integer data) Encode int data to string with base64vlq format. public static Stringencode(Array data) Encode array data to string with base64vlq format. public static Arraydecode(String data) Decode string to binary data with base64vlq format. Members public static Stringencode(Integer data) Encode int data to string with base64vlq format. Parameters data Int data to be encoded. Returns The encoded result string. public static Stringencode(Array data) Encode array data to string with base64vlq format. Parameters data Array data to be encoded. Returns The encoded result string. public static Arraydecode(String data) Decode string to binary data with base64vlq format. Parameters data String data to be decoded. Returns The decoded result binary data. "
},
{
	"uri": "http://example.org/module/bson/",
	"title": "bson",
	"tags": [],
	"description": "bson module with encode and decode operations.",
	"content": "bson module with encode and decode operations. to use: var encoding = require(&#39;encoding&#39;); var bson = encoding.bson; or: var bson = require(&#39;bson&#39;); Summary Members Descriptions public staticBufferencode(Object data) Encode object to binary data with bson format. public static Objectdecode(Bufferdata) Decode binary data to object with bson format. Members public staticBufferencode(Object data) Encode object to binary data with bson format. Parameters data Object to be encoded. Returns The encoded result binary data. public static Objectdecode(Bufferdata) Decode binary data to object with bson format. Parameters data Binary data to be decoded. Returns The decoded result object. "
},
{
	"uri": "http://example.org/module/console/",
	"title": "console",
	"tags": [],
	"description": "Global reference. Console can be used to log info, warnings and errors. Log can be trace on different device when initialized from config files for tracking.",
	"content": "console module Global reference. Console can be used to log info, warnings and errors. Log can be trace on different device when initialized from config files for tracking. Console logs support formatted output, e.g. console.log(&amp;quot;%d + %d = %d&amp;quot;, 100, 200, 100 + 200); s - string d - number, including initeger and numbers j - output in JSON %% - output &amp;ldquo; character Summary Members Descriptions public static staticadd(Array cfg) Batch add console output, supportted devices are console, syslog and file, maximum output number is 10. public static staticadd(Value cfg) Add console output, supportted devices are console, syslog and file, maximum output number is 10. public static staticreset() initialize with default configuration, only output in console public static staticlog(String fmt,...) Record INFO log, Equivalent to the info function. public static staticlog(...) Record INFO log, Equivalent to the info function. public static staticdebug(String fmt,...) Record DEBUG log. public static staticdebug(...) Record DEBUG log. public static staticinfo(String fmt,...) Record INFO log, Equivalent to the log function. public static staticinfo(...) Record INFO log, Equivalent to the log function. public static staticnotice(String fmt,...) Record NOTICE log. public static staticnotice(...) Record NOTICE log. public static staticwarn(String fmt,...) Record WARN log. public static staticwarn(...) Record WARN log. public static staticerror(String fmt,...) Record ERROR log. public static staticerror(...) Record ERROR log. public static staticcrit(String fmt,...) Record CRIT log. public static staticcrit(...) Record CRIT log. public static staticalert(String fmt,...) Record ALERT log. public static staticalert(...) Record ALERT log. public static staticdir(Value obj) Output object in JSON format. public static statictime(String label) Start a timer. public static statictimeEnd(String label) Value of specified timer. public static statictrace(String label) Output the current used stack. public static staticassert(Value value,String msg) Assertion test, which will throw error when testing result is false. public static staticprint(String fmt,...) Formatted text output to the console, the content will not be written to log system, and the output text does not wrap automatically, the output can output continuously. public static staticprint(...) Formatted text output to the console, the content will not be written to log system, and the output text does not wrap automatically, the output can output continuously. public static StringreadLine(String msg) Read the user input from the console. Members public static staticadd(Array cfg) Batch add console output, supportted devices are console, syslog and file, maximum output number is 10. Console can be configured to send program outputs and system errors to different devices, for collecting runtime information. console.add([&amp;quot;console&amp;quot;, { type: &amp;quot;syslog&amp;quot;, levels: [console.INFO, console.ERROR] }]); Parameters cfg An array of console log config public static staticadd(Value cfg) Add console output, supportted devices are console, syslog and file, maximum output number is 10. Console can be configured to send program outputs and system errors to different devices, for collecting runtime information. Cfg is config which can be set as the string of devices name. console.add(&amp;quot;console&amp;quot;); You can also configure console levels for one device console.add({ type: &amp;quot;console&amp;quot;, levels: [console.INFO, console.ERROR] // options, output all level of log if skip this option. }); Syslog only works on posix platform: console.add({ type: &amp;quot;syslog&amp;quot;, levels: [console.INFO, console.ERROR] }); file log dose not support simple calls console.add({ type: &amp;quot;file&amp;quot;, levels: [console.INFO, console.ERROR], path: &amp;quot;path/to/file&amp;quot;, // required split: &amp;quot;30m&amp;quot;, //optional, options can be &amp;quot;day&amp;quot;, &amp;quot;hour&amp;quot;, &amp;quot;minute&amp;quot;, &amp;quot;###k&amp;quot;, &amp;quot;###m&amp;quot;, &amp;quot;###g&amp;quot; count: 10 //optional, options can be any integer between 2-128, this option requires the split option }); Parameters cfg Output configuration public static staticreset() initialize with default configuration, only output in console public static staticlog(String fmt,...) Record INFO log, Equivalent to the info function. Record the INFO level of log information. Typically used to output the non-erroneous message. Parameters fmt The format string ... Optional parameter list public static staticlog(...) Record INFO log, Equivalent to the info function. Record the INFO level of log information. Typically used to output the non-erroneous message. Parameters ... Optional parameter list public static staticdebug(String fmt,...) Record DEBUG log. Record the DEBUG level of log information. Typically used to output the debug message. Parameters fmt The format string ... Optional parameter list public static staticdebug(...) Record DEBUG log. Record the DEBUG level of log information. Typically used to output the debug message. Parameters ... Optional parameter list public static staticinfo(String fmt,...) Record INFO log, Equivalent to the log function. Record the INFO level of log information. Typically used to output the non-erroneous message. Parameters fmt The format string ... Optional parameter list public static staticinfo(...) Record INFO log, Equivalent to the log function. Record the INFO level of log information. Typically used to output the non-erroneous message. Parameters ... Optional parameter list public static staticnotice(String fmt,...) Record NOTICE log. Record the NOTICE level of log information. Typically used to output the suggestive debug message. Parameters fmt The format string ... Optional parameter list public static staticnotice(...) Record NOTICE log. Record the NOTICE level of log information. Typically used to output the suggestive debug message. Parameters ... Optional parameter list public static staticwarn(String fmt,...) Record WARN log. Record the WARN level of log information. Typically used to output the warning debug message. Important. Parameters fmt The format string ... Optional parameter list public static staticwarn(...) Record WARN log. Record the WARN level of log information. Typically used to output the warning debug message. Important. Parameters ... Optional parameter list public static staticerror(String fmt,...) Record ERROR log. Record the ERROR level of log information. Typically used to output the error message. Very important. System error message is also record in this level. Parameters fmt The format string ... Optional parameter list public static staticerror(...) Record ERROR log. Record the ERROR level of log information. Typically used to output the error message. Very important. System error message is also record in this level. Parameters ... Optional parameter list public static staticcrit(String fmt,...) Record CRIT log. Record the CRIT level of log information. Typically used to output the critical error message. Very important. Parameters fmt The format string ... Optional parameter list public static staticcrit(...) Record CRIT log. Record the CRIT level of log information. Typically used to output the critical error message. Very important. Parameters ... Optional parameter list public static staticalert(String fmt,...) Record ALERT log. Record the ALERT level of log information. Typically used to output the alert error message. Very important. This level is the highest one. Parameters fmt The format string ... Optional parameter list public static staticalert(...) Record ALERT log. Record the ALERT level of log information. Typically used to output the alert error message. Very important. This level is the highest one. Parameters ... Optional parameter list public static staticdir(Value obj) Output object in JSON format. Parameters obj The object given to display public static statictime(String label) Start a timer. Parameters label Title, default is an empty string. public static statictimeEnd(String label) Value of specified timer. Parameters label Title, default is an empty string. public static statictrace(String label) Output the current used stack. Output the current used stack by log. Parameters label Title, default is an empty string. public static staticassert(Value value,String msg) Assertion test, which will throw error when testing result is false. Parameters value The value for test msg Error message public static staticprint(String fmt,...) Formatted text output to the console, the content will not be written to log system, and the output text does not wrap automatically, the output can output continuously. Parameters fmt The format string ... Optional parameter list public static staticprint(...) Formatted text output to the console, the content will not be written to log system, and the output text does not wrap automatically, the output can output continuously. Parameters ... Optional parameter list public static StringreadLine(String msg) Read the user input from the console. Parameters msg Prompt information Returns Returns the user input information. "
},
{
	"uri": "http://example.org/module/coroutine/",
	"title": "coroutine",
	"tags": [],
	"description": "Concurrency control module.",
	"content": "Concurrency control module. The way to use: var coroutine = require(&amp;lsquo;coroutine&amp;rsquo;); Summary Members Descriptions public staticFiberstart(Function func,...) Start a fibers and return the fiber Object. public static Arrayparallel(Array funcs,Integer fibers) Execute a set of functions parallel, and wait for the return. public static Arrayparallel(Array datas,Function func,Integer fibers) Execute a function deal with a set of data parallel, and wait for the return. public static Arrayparallel(...) Execute a set of functions parallel, and wait for the return. public staticFibercurrent() Returns the current fiber. public static staticsleep(Integer ms) Pause the current fiber specified time. Members public staticFiberstart(Function func,...) Start a fibers and return the fiber Object. Parameters func Set a function to be executed by the fibers. ... Variable parameter sequence, the sequence will pass to function in fiber. Returns Returns the fiber object. public static Arrayparallel(Array funcs,Integer fibers) Execute a set of functions parallel, and wait for the return. Parameters funcs An array of function to be executed parallel fibers Limit the number of concurrent fiber, default -1 (the number of funcs size). Returns Returns the array of functions execute results public static Arrayparallel(Array datas,Function func,Integer fibers) Execute a function deal with a set of data parallel, and wait for the return. Parameters datas An array of params to be executed by function parallel. func The function executed parallel fibers Limit the number of concurrent fiber, default -1 (the number of datas size). Returns Returns the array of function execute results public static Arrayparallel(...) Execute a set of functions parallel, and wait for the return. Parameters ... A set of function to be execute parallel Returns Returns the array of functions execute results public staticFibercurrent() Returns the current fiber. Returns Returns the current fiber object. public static staticsleep(Integer ms) Pause the current fiber specified time. Parameters ms Specify the suspend time in milliseconds, the default value is 0, which back to resume immediately. "
},
{
	"uri": "http://example.org/module/crypto/",
	"title": "crypto",
	"tags": [],
	"description": "Encryption algorithm module.",
	"content": "Encryption algorithm module. The way to use: var crypto = require(&#39;crypto&#39;); Summary Members Descriptions public staticPKeyloadPKey(String filename,String password) Load a PEM/DER format key file. public staticX509CertloadCert(String filename) Load a CRT/PEM/DER/TXT format certificate can be called multiple times. public staticX509CrlloadCrl(String filename) Load a PEM/DER format revoked certificate can be called multiple times. public staticX509ReqloadReq(String filename) Load a PEM/DER format requested certificate can be called multiple times. public staticBufferrandomBytes(Integer size) Generate the specified size of the random number, which use the havege generator. public staticBufferpseudoRandomBytes(Integer size) Generate the specified size of the pseudo-random number, which use the entropy generator. public static StringrandomArt(Bufferdata,String title,Integer size) Generate a visual character image by use given data. Members public staticPKeyloadPKey(String filename,String password) Load a PEM/DER format key file. Parameters filename Key file name. password Decryption password. public staticX509CertloadCert(String filename) Load a CRT/PEM/DER/TXT format certificate can be called multiple times. LoadFile load mozilla certdata.txt, which can be download from http://hg.mozilla.org/releases/mozilla-release/raw-file/default/security/nss/lib/ckfw/builtins/certdata.txt Parameters filename Certificate file name. public staticX509CrlloadCrl(String filename) Load a PEM/DER format revoked certificate can be called multiple times. Parameters filename The cancellation certificate file name. public staticX509ReqloadReq(String filename) Load a PEM/DER format requested certificate can be called multiple times. Parameters filename The requested certificate file name. public staticBufferrandomBytes(Integer size) Generate the specified size of the random number, which use the havege generator. Parameters size Specify the size of the generated random number. Returns Return the generated random number. public staticBufferpseudoRandomBytes(Integer size) Generate the specified size of the pseudo-random number, which use the entropy generator. Parameters size Specify the size of the generated random number. Returns Return the generated random number. public static StringrandomArt(Bufferdata,String title,Integer size) Generate a visual character image by use given data. Parameters data Specifies the data to display. title The title of the specified character image, multibyte characters can cause width error. size The character image size. Returns Return the generated visual string image. "
},
{
	"uri": "http://example.org/module/db/",
	"title": "db",
	"tags": [],
	"description": "Database access module.",
	"content": "Database access module. Basic module for create database and database operation, The way to use:: var db = require(&#39;db&#39;); Summary Members Descriptions public staticobjectopen(String connString) This method offer a general entrance to open a database, call different engines according to the providing connString. public staticMySQLopenMySQL(String connString) Open a mysql database. public staticSQLiteopenSQLite(String connString) Open a sqlite database. public staticMongoDBopenMongoDB(String connString) Open a mongodb database. public staticLevelDBopenLevelDB(String connString) Open a leveldb database. public staticRedisopenRedis(String connString) Open a Redis database. public static Stringformat(String sql,...) Formatting a sql command, and returns the formatted results. public static StringformatMySQL(String sql,...) Formatting a sql command, and returns the formatted results. public static Stringescape(String str,Boolean mysql) String encoded as security coded SQL strings. Members public staticobjectopen(String connString) This method offer a general entrance to open a database, call different engines according to the providing connString. Parameters connString Database Description, For example: mysql://user:pass@host/db Returns Returns the database connection object. public staticMySQLopenMySQL(String connString) Open a mysql database. Parameters connString Database Description, For example: mysql://user:pass@host/db Returns Returns the database connection object. public staticSQLiteopenSQLite(String connString) Open a sqlite database. Parameters connString Database Description, For example: sqlite:test.db or test.db Returns Returns the database connection object. public staticMongoDBopenMongoDB(String connString) Open a mongodb database. Parameters connString Database Description Returns Returns the database connection object. public staticLevelDBopenLevelDB(String connString) Open a leveldb database. Parameters connString Database Description, For example: level:test.db or test.db Returns Returns the database connection object. public staticRedisopenRedis(String connString) Open a Redis database. Parameters connString Database Description, For example: redis://server:port or &amp;ldquo;server&amp;rdquo; Returns Returns the database connection object. public static Stringformat(String sql,...) Formatting a sql command, and returns the formatted results. Parameters sql Format string, optional parameters can be specified as &amp;lsquo;?&amp;rsquo;, for example: &amp;lsquo;SELECT FROM TEST WHERE [id]=?&amp;rsquo; ... Optional parameter list Returns Return the formatted sql command. public static StringformatMySQL(String sql,...) Formatting a sql command, and returns the formatted results. Parameters sql Format string, optional parameters can be specified as &amp;lsquo;?&amp;rsquo;, for example: &amp;lsquo;SELECT FROM TEST WHERE [id]=?&amp;rsquo; ... Optional parameter list Returns Return the formatted sql command. public static Stringescape(String str,Boolean mysql) String encoded as security coded SQL strings. Parameters str The string that need to be encoded mysql Specify the Mysql encoding, the default value is false Returns Returns the encoded string "
},
{
	"uri": "http://example.org/module/encoding/",
	"title": "encoding",
	"tags": [],
	"description": "module with encode and decode operations between hex and other format data.",
	"content": "module with encode and decode operations between hex and other format data. to use: var encoding = require(&#39;encoding&#39;); Summary Members Descriptions public static Stringjsstr(String str,Boolean json) Encode the string to Javascript escaped string that can be contained in the javascript code. public static StringencodeURI(String url) Url encoding. public static StringencodeURIComponent(String url) Url component encoding. public static StringdecodeURI(String url) Url decoding. Members public static Stringjsstr(String str,Boolean json) Encode the string to Javascript escaped string that can be contained in the javascript code. Parameters str The string to encode json Specifies generate the string json compatible. Returns Returns the encoded string. public static StringencodeURI(String url) Url encoding. Parameters url Url to be encoded. Returns The encoded result string. public static StringencodeURIComponent(String url) Url component encoding. Parameters url Url to be encoded. Returns The encoded result string. public static StringdecodeURI(String url) Url decoding. Parameters url Url to be decoded. Returns The decoded result string. "
},
{
	"uri": "http://example.org/module/fs/",
	"title": "fs",
	"tags": [],
	"description": "file system module.",
	"content": "file system module how to use var fs = require(&#39;fs&#39;); Summary Members Descriptions public static Booleanexists(String path) search if the file or directory exists public static BooleanexistsSync(String path) search if the file or directory exists. Sync version of fs.exists(). public static staticunlink(String path) the file you want to delete public static staticunlinkSync(String path) the file you want to delete. Sync version of fs.unlink(). public static staticmkdir(String path,Integer mode) create a directory public static staticmkdirSync(String path,Integer mode) create a directory. Sync version of fs.mkdir(). public static staticrmdir(String path) delete a directory public static staticrmdirSync(String path) delete a directory. Sync version of fs.rmdir(). public static staticrename(String from,String to) rename a file public static staticrenameSync(String from,String to) rename a file public static staticcopy(String from,String to) copy file public static staticchmod(String path,Integer mode) check the permission of targeting file, Windows does not support this public static staticchmodSync(String path,Integer mode) check the permission of targeting file, Windows does not support this. Sync version of fs.chmod(). public staticStatstat(String path) check file basic infomation/stat public staticStatstatSync(String path) check file basic infomation/stat. Sync version of fs.stat(). public staticListreaddir(String path) read fileinfo inside target directory public staticListreaddirSync(String path) read fileinfo inside target directory. Sync version of fs.readdir(). public staticSeekableStreamopen(String fname,String flags) open text file to read, write, or read and write public staticSeekableStreamopenSync(String fname,String flags) open text file to read, write, or read and write. Sync version of fs.open(). public staticBufferedStreamopenTextStream(String fname,String flags) open text file to read, write, or read and write public static StringreadTextFile(String fname) open file and read the conent. public static StringreadFile(String fname) open a file, read the content public staticBufferreadFileSync(String fname) open a file, read the content. Sync version of fs.readFile(). public static ArrayreadLines(String fname,Integer maxlines) open file, ready each line of text content intot an array, end of line is recognized based on EOL definition, by default, posix system: &amp;ldquo;\n&amp;rdquo;; windows system: &amp;ldquo;\r\n&amp;rdquo; public static staticwriteTextFile(String fname,String txt) create text file and write to file 创建文本文件，并写入内容 public static staticwriteFile(String fname,String txt) create file, and write new content public static staticwriteFileSync(String fname,Bufferdata) create file, and write new content. Sync version of fs.writeFile(). Members public static Booleanexists(String path) search if the file or directory exists Parameters path assign the search path Returns return True indicates the file or directory exists public static BooleanexistsSync(String path) search if the file or directory exists. Sync version of fs.exists(). Parameters path assign the search path Returns return True indicates the file or directory exists public static staticunlink(String path) the file you want to delete Parameters path the path you want to delete public static staticunlinkSync(String path) the file you want to delete. Sync version of fs.unlink(). Parameters path the path you want to delete public static staticmkdir(String path,Integer mode) create a directory Parameters path assign the name of directory mode assign file ownership, Windows user ignore this public static staticmkdirSync(String path,Integer mode) create a directory. Sync version of fs.mkdir(). Parameters path assign the name of directory mode assign file ownership, Windows user ignore this public static staticrmdir(String path) delete a directory Parameters path the name of targeting directory public static staticrmdirSync(String path) delete a directory. Sync version of fs.rmdir(). Parameters path the name of targeting directory public static staticrename(String from,String to) rename a file Parameters from the targeting file name to the name you want to change to public static staticrenameSync(String from,String to) rename a file Parameters from the targeting file name. Sync version of fs.rename(). to the name you want to change to public static staticcopy(String from,String to) copy file Parameters from file path to new file path public static staticchmod(String path,Integer mode) check the permission of targeting file, Windows does not support this Parameters path the path to the targeting file mode targeting file permission public static staticchmodSync(String path,Integer mode) check the permission of targeting file, Windows does not support this. Sync version of fs.chmod(). Parameters path the path to the targeting file mode targeting file permission public staticStatstat(String path) check file basic infomation/stat Parameters path the path to the targeting file Returns return file basic infomation/stat public staticStatstatSync(String path) check file basic infomation/stat. Sync version of fs.stat(). Parameters path the path to the targeting file Returns return file basic infomation/stat public staticListreaddir(String path) read fileinfo inside target directory Parameters path the path to the directory Returns return a array of files&amp;rsquo; info in target directory public staticListreaddirSync(String path) read fileinfo inside target directory. Sync version of fs.readdir(). Parameters path the path to the directory Returns return a array of files&amp;rsquo; info in target directory public staticSeekableStreamopen(String fname,String flags) open text file to read, write, or read and write Parameters fname the name of file flags define the method for opening file, default is &amp;lsquo;r&amp;rsquo;, read only, other supported methods see below: &amp;lsquo;r&amp;rsquo; ready only, throw excption if file dose not exists &amp;lsquo;r+&amp;rsquo; read and write, throw excption if file dose not exists &amp;lsquo;w&amp;rsquo; write only, create new if file dose not exist, othewise overwrite &amp;lsquo;w+&amp;rsquo; ready and write, create new if file dose not exist, othewise overwrite &amp;lsquo;a&amp;rsquo; write only add file, create new if file dose not exist, othewise overwrite &amp;lsquo;a+&amp;rsquo; read and write to add file, create new if file dose not exist, othewise overwrite Returns return opened file object public staticSeekableStreamopenSync(String fname,String flags) open text file to read, write, or read and write. Sync version of fs.open(). Parameters fname the name of file flags define the method for opening file, default is &amp;lsquo;r&amp;rsquo;, read only, other supported methods see below: &amp;lsquo;r&amp;rsquo; ready only, throw excption if file dose not exists &amp;lsquo;r+&amp;rsquo; read and write, throw excption if file dose not exists &amp;lsquo;w&amp;rsquo; write only, create new if file dose not exist, othewise overwrite &amp;lsquo;w+&amp;rsquo; ready and write, create new if file dose not exist, othewise overwrite &amp;lsquo;a&amp;rsquo; write only add file, create new if file dose not exist, othewise overwrite &amp;lsquo;a+&amp;rsquo; read and write to add file, create new if file dose not exist, othewise overwrite Returns return opened file object public staticBufferedStreamopenTextStream(String fname,String flags) open text file to read, write, or read and write Parameters fname the name of file flags define the method for opening file, default is &amp;lsquo;r&amp;rsquo;, read only, other supported methods see below: &amp;lsquo;r&amp;rsquo; ready only, throw excption if file dose not exists &amp;lsquo;r+&amp;rsquo; read and write, throw excption if file dose not exists &amp;lsquo;w&amp;rsquo; write only, create new if file dose not exist, othewise overwrite &amp;lsquo;w+&amp;rsquo; ready and write, create new if file dose not exist, othewise overwrite &amp;lsquo;a&amp;rsquo; write only add file, create new if file dose not exist, othewise overwrite &amp;lsquo;a+&amp;rsquo; read and write to add file, create new if file dose not exist, othewise overwrite Returns return opened file object public static StringreadTextFile(String fname) open file and read the conent. Parameters fname the name of file Returns file content public static StringreadFile(String fname) open a file, read the content Parameters fname assign file name Returns return content of opened file public staticBufferreadFileSync(String fname) open a file, read the content. Sync version of fs.readFile(). Parameters fname assign file name Returns return content of opened file public static ArrayreadLines(String fname,Integer maxlines) open file, ready each line of text content intot an array, end of line is recognized based on EOL definition, by default, posix system: &amp;ldquo;\n&amp;rdquo;; windows system: &amp;ldquo;\r\n&amp;rdquo; Parameters fname assign file name maxlines define the maximum number of line to read, read all lines by default Returns return the array containing every line of file content, if no content or connection is lost, then return an empty array public static staticwriteTextFile(String fname,String txt) create text file and write to file 创建文本文件，并写入内容 Parameters fname assign file name txt sting to be written public static staticwriteFile(String fname,String txt) create file, and write new content Parameters fname assign file name txt the content you are going to write into file public static staticwriteFileSync(String fname,Bufferdata) create file, and write new content. Sync version of fs.writeFile(). Parameters fname assign file name txt the content you are going to write into file "
},
{
	"uri": "http://example.org/module/gd/",
	"title": "gd",
	"tags": [],
	"description": "Image processing module.",
	"content": "Image processing module. Base module. It can be used to create and manipulate image files. The way to use： var gd = require(&#39;gd&#39;); Summary Members Descriptions public staticImagecreate(Integer width,Integer height,Integer color) Create a new image. public staticImageload(Bufferdata) Decoded image from the format data. public staticImageload(SeekableStreamstm) Decoded image from the stream object. public staticImageload(String fname) Decoded image from the specified file. public static Integerrgb(Integer red,Integer green,Integer blue) Generating a combined color through rgb color components. public static Integerrgba(Integer red,Integer green,Integer blue,Number alpha) Generating a combined color through rgba color components. public static Integerhsl(Number hue,Number saturation,Number lightness) Generating a combined color through hsl color components. public static Integerhsla(Number hue,Number saturation,Number lightness,Number alpha) Generating a combined color through hsla color components. public static Integerhsb(Number hue,Number saturation,Number brightness) Generating a combined color through hsb color components. public static Integerhsba(Number hue,Number saturation,Number brightness,Number alpha) Generating a combined color through hsba color components. public static Integercolor(String color) Generating a combined color by string. Members public staticImagecreate(Integer width,Integer height,Integer color) Create a new image. Parameters width Specifies the width of the image. height Specifies the height of the image. color Specify the image type, the allowable value is gd.TRUECOLOR or gd.PALETTE Returns Returns the created image object of success. public staticImageload(Bufferdata) Decoded image from the format data. Parameters data The image data need decoded. Returns Return successfully decoded image object. public staticImageload(SeekableStreamstm) Decoded image from the stream object. Parameters stm The stream object of the specified image data. Returns Return successfully decoded image object. public staticImageload(String fname) Decoded image from the specified file. Parameters fname Specify the file name. Returns Return successfully decoded image object. public static Integerrgb(Integer red,Integer green,Integer blue) Generating a combined color through rgb color components. Parameters red Red component in the range of 0-255 green Green component in the range of 0-255 blue Blue component in the range of 0-255 Returns Returns the combined color. public static Integerrgba(Integer red,Integer green,Integer blue,Number alpha) Generating a combined color through rgba color components. Parameters red Red component in the range of 0-255 green Green component in the range of 0-255 blue Blue component in the range of 0-255 alpha Transparent component in the range of 0.0-1.0 Returns Returns the combined color. public static Integerhsl(Number hue,Number saturation,Number lightness) Generating a combined color through hsl color components. Parameters hue Hue component in the range of 0-360. saturation Saturation components in the range of 0.0-1.0 lightness Lightness component in the range of 0.0-1.0 Returns Returns the combined color. public static Integerhsla(Number hue,Number saturation,Number lightness,Number alpha) Generating a combined color through hsla color components. Parameters hue Hue component in the range of 0-360. saturation Saturation components in the range of 0.0-1.0 lightness Lightness component in the range of 0.0-1.0 alpha Transparent component in the range of 0.0-1.0 Returns Returns the combined color. public static Integerhsb(Number hue,Number saturation,Number brightness) Generating a combined color through hsb color components. Parameters hue Hue component in the range of 0-360. saturation Saturation components in the range of 0.0-1.0 brightness Brightness component in the range of 0.0-1.0 Returns Returns the combined color. public static Integerhsba(Number hue,Number saturation,Number brightness,Number alpha) Generating a combined color through hsba color components. Parameters hue Hue component in the range of 0-360. saturation Saturation components in the range of 0.0-1.0 brightness Brightness component in the range of 0.0-1.0 alpha Transparent component in the range of 0.0-1.0 Returns Returns the combined color. public static Integercolor(String color) Generating a combined color by string. Parameters color The specified color string, e.g: &amp;ldquo;#ff0000&amp;rdquo;, &amp;ldquo;ff0000&amp;rdquo;, &amp;ldquo;#f00&amp;rdquo;, &amp;ldquo;f00&amp;rdquo; Returns Returns the combined color. "
},
{
	"uri": "http://example.org/module/global/",
	"title": "global",
	"tags": [],
	"description": "Global object, which can be accessed by all scripts.",
	"content": "Global object, which can be accessed by all scripts. Summary Members Descriptions public static staticrun(String fname,Array argv) Run a script. public static Valuerequire(String id) Load a module and return module object, reference Module Management. public static staticGC() Mandatory for garbage collection. public static staticrepl(Array cmds) Enter the interactive mode, you can interactively execute the internal commands and code which can only be referenced when js start. public static staticrepl(Streamout,Array cmds) Enter the interactive mode, you can interactively execute the internal commands and code which can only be referenced when js start. Members public static staticrun(String fname,Array argv) Run a script. Parameters fname Specifies the running path for script argv Specify the run parameters, which can be caught in script by argv. public static Valuerequire(String id) Load a module and return module object, reference Module Management. require can be used to load the base module, such as file module. Base module is initializing when the sandbox created, only need pass the id when referencing, e.g: require(&amp;ldquo;net&amp;rdquo;)。 File module is user-defined modules which required by the relative path beginning with &amp;lsquo;./&amp;rsquo; or &amp;lsquo;../&amp;rsquo;. File module supports .js and .json file. File module also supports the format package.json, system will first require the main in package.json when the module is a directory, then will try to load index.js or index.json in the path if failed. If the path is not a reference beginning with ./ or ../, and the module is not non-base module, system will first require the match one in startup path, and then look for the .modules in current path, then try the parent directory. Parameters id Specifies the name of module to load Returns Returns the derivation of the load module public static staticGC() Mandatory for garbage collection. public static staticrepl(Array cmds) Enter the interactive mode, you can interactively execute the internal commands and code which can only be referenced when js start. Parameters cmds Add commands in the following format: cpp [ { cmd: &amp;quot;.test&amp;quot;, help: &amp;quot;this is a test&amp;quot;, exec: function(argv) { console.log(argv); } }, { cmd: &amp;quot;.test1&amp;quot;, help: &amp;quot;this is an other test&amp;quot;, exec: function(argv) { console.log(argv); } } ] public static staticrepl(Streamout,Array cmds) Enter the interactive mode, you can interactively execute the internal commands and code which can only be referenced when js start. At the same time allowed only a Stream repl, close the previous one when create a new Stream repl. Parameters out Input/output stream object, usually for a network connection cmds Add commands in the following format: [ { cmd: &amp;quot;.test&amp;quot;, help: &amp;quot;this is a test&amp;quot;, exec: function(argv) { console.log(argv); } }, { cmd: &amp;quot;.test1&amp;quot;, help: &amp;quot;this is an other test&amp;quot;, exec: function(argv) { console.log(argv); } } ] "
},
{
	"uri": "http://example.org/module/hash/",
	"title": "hash",
	"tags": [],
	"description": "digest calculation module, can be used to calculate the message digest and summary Signature.",
	"content": "Message digest calculation module, can be used to calculate the message digest and summary Signature. Summary Members Descriptions public staticDigestdigest(Integer algo,Bufferdata) Create a message digest object with the specified algorithm. public staticDigestdigest(Integer algo) Create a message digest object with the specified algorithm. public staticDigestmd2(Bufferdata) Create a MD2 message digest object. public staticDigestmd4(Bufferdata) Create a MD4 message digest object. public staticDigestmd5(Bufferdata) Create a MD5 message digest object. public staticDigestsha1(Bufferdata) Create a SHA1 message digest object. public staticDigestsha224(Bufferdata) Create a SHA224 message digest object. public staticDigestsha256(Bufferdata) Create a SHA256 message digest object. public staticDigestsha384(Bufferdata) Create a SHA384 message digest object. public staticDigestsha512(Bufferdata) Create a SHA512 message digest object. public staticDigestripemd160(Bufferdata) Create a RIPEMD160 message digest object. public staticDigesthmac(Integer algo,Bufferkey) Create a message signature digest object with the specified algorithm. public staticDigesthmac_md2(Bufferkey) Create a MD2 message digest signature object. public staticDigesthmac_md4(Bufferkey) Create a MD4 message digest signature object. public staticDigesthmac_md5(Bufferkey) Create a MD5 message digest signature object. public staticDigesthmac_sha1(Bufferkey) Create a SHA1 message digest signature object. public staticDigesthmac_sha224(Bufferkey) Create a SHA224 message digest signature object. public staticDigesthmac_sha256(Bufferkey) Create a SHA256 message digest signature object. public staticDigesthmac_sha384(Bufferkey) Create a SHA384 message digest signature object. public staticDigesthmac_sha512(Bufferkey) Create a SHA512 message digest signature object. public staticDigesthmac_ripemd160(Bufferkey) Create a RIPEMD160 message digest signature object. Members public staticDigestdigest(Integer algo,Bufferdata) Create a message digest object with the specified algorithm. Parameters algo Specifies the digest algorithm. data Binary data needs to be updated. Returns Returns the message digest object. public staticDigestdigest(Integer algo) Create a message digest object with the specified algorithm. Parameters algo Specifies the digest algorithm. Returns Returns the message digest object. public staticDigestmd2(Bufferdata) Create a MD2 message digest object. Parameters data Binary data needs to be updated. Returns Returns the message digest object. public staticDigestmd4(Bufferdata) Create a MD4 message digest object. Parameters data Binary data needs to be updated. Returns Returns the message digest object. public staticDigestmd5(Bufferdata) Create a MD5 message digest object. Parameters data Binary data needs to be updated. Returns Returns the message digest object. public staticDigestsha1(Bufferdata) Create a SHA1 message digest object. Parameters data Binary data needs to be updated. Returns Returns the message digest object. public staticDigestsha224(Bufferdata) Create a SHA224 message digest object. Parameters data Binary data needs to be updated. Returns Returns the message digest object. public staticDigestsha256(Bufferdata) Create a SHA256 message digest object. Parameters data Binary data needs to be updated. Returns Returns the message digest object. public staticDigestsha384(Bufferdata) Create a SHA384 message digest object. Parameters data Binary data needs to be updated. Returns Returns the message digest object. public staticDigestsha512(Bufferdata) Create a SHA512 message digest object. Parameters data Binary data needs to be updated. Returns Returns the message digest object. public staticDigestripemd160(Bufferdata) Create a RIPEMD160 message digest object. Parameters data Binary data needs to be updated. Returns Returns the message digest object. public staticDigesthmac(Integer algo,Bufferkey) Create a message signature digest object with the specified algorithm. Parameters algo Specifies the digest algorithm. key Binary signature key. Returns Returns the message digest object. public staticDigesthmac_md2(Bufferkey) Create a MD2 message digest signature object. Parameters key Binary signature key. Returns Returns the message digest object. public staticDigesthmac_md4(Bufferkey) Create a MD4 message digest signature object. Parameters key Binary signature key. Returns Returns the message digest object. public staticDigesthmac_md5(Bufferkey) Create a MD5 message digest signature object. Parameters key Binary signature key. Returns Returns the message digest object. public staticDigesthmac_sha1(Bufferkey) Create a SHA1 message digest signature object. Parameters key Binary signature key. Returns Returns the message digest object. public staticDigesthmac_sha224(Bufferkey) Create a SHA224 message digest signature object. Parameters key Binary signature key. Returns Returns the message digest object. public staticDigesthmac_sha256(Bufferkey) Create a SHA256 message digest signature object. Parameters key Binary signature key. Returns Returns the message digest object. public staticDigesthmac_sha384(Bufferkey) Create a SHA384 message digest signature object. Parameters key Binary signature key. Returns Returns the message digest object. public staticDigesthmac_sha512(Bufferkey) Create a SHA512 message digest signature object. Parameters key Binary signature key. Returns Returns the message digest object. public staticDigesthmac_ripemd160(Bufferkey) Create a RIPEMD160 message digest signature object. Parameters key Binary signature key. Returns Returns the message digest object. "
},
{
	"uri": "http://example.org/module/hex/",
	"title": "hex",
	"tags": [],
	"description": "Module with encode and decode operations between hex and string.",
	"content": "module with encode and decode operations between hex and string. to use: var encoding = require(&#39;encoding&#39;); var hex = encoding.hex; or: var hex = require(&#39;hex&#39;); Summary Members Descriptions public static Stringencode(Bufferdata) Encode data whith hex format. public staticBufferdecode(String data) Decode string to binary data with hex format. Members public static Stringencode(Bufferdata) Encode data whith hex format. Parameters data Data to be encoded. Returns Encoded result string. public staticBufferdecode(String data) Decode string to binary data with hex format. Parameters data String to be decode. Returns Decoded binary data result. "
},
{
	"uri": "http://example.org/module/http/",
	"title": "http",
	"tags": [],
	"description": "HTTP transfer protocol module, handels http protocol.",
	"content": "HTTP transfer protocol module, handels http protocol. Summary Members Descriptions public staticHttpRequestnewRequest() create a http request object，reference HttpRequest public staticHttpResponsenewResponse() create a http response object，reference HttpResponse public staticHttpCookienewCookie() create a http cookie object，reference HttpCookie public staticHttpServernewServer() create a http server，reference HttpServer public staticHttpsServernewHttpsServer() create a https server, reference HttpsServer public staticHttpHandlernewHandler() create a http protocol handler，reference HttpHandler public staticHandlerfileHandler(String root,Object mimes) create a http static file processor, in case of using static file to respond http request public staticHttpResponserequest(Streamconn,HttpRequestreq) send http request to connection object，return response public staticHttpResponserequest(String method,String url,Object headers) assign requested url, and return public staticHttpResponserequest(String method,String url,SeekableStreambody,Object headers) Request the specified url, and get the response. public staticHttpResponserequest(String method,String url,SeekableStreambody,Mapheaders) Request the specified url, and get the response. public staticHttpResponserequest(String method,String url,Bufferbody,Object headers) Request the specified url, and get the response. public staticHttpResponseget(String url,Object headers) reuqest url with GET method，and return response，same as request(&amp;ldquo;GET&amp;rdquo;, &amp;hellip;) public staticHttpResponsepost(String url,SeekableStreambody,Object headers) reuqest url with POST method，and return response，same as request(&amp;ldquo;POST&amp;rdquo;, &amp;hellip;) public staticHttpResponsepost(String url,Bufferbody,Object headers) reuqest url with POST method，and return response，same as request(&amp;ldquo;POST&amp;rdquo;, &amp;hellip;) Members public staticHttpRequestnewRequest() create a http request object，reference HttpRequest public staticHttpResponsenewResponse() create a http response object，reference HttpResponse public staticHttpCookienewCookie() create a http cookie object，reference HttpCookie public staticHttpServernewServer() create a http server，reference HttpServer public staticHttpsServernewHttpsServer() create a https server, reference HttpsServer public staticHttpHandlernewHandler() create a http protocol handler，reference HttpHandler public staticHandlerfileHandler(String root,Object mimes) create a http static file processor, in case of using static file to respond http request Parameters root file root folder mimes extends mime settings mimes extedns mime settings Returns return a static file processor to handle http request fileHandler support gzip pre-compression，when accept gzip in content-typeand filename.ext.gz exists under same root，then return the file directly， to avoid extra load on server. public staticHttpResponserequest(Streamconn,HttpRequestreq) send http request to connection object，return response Parameters conn assign requested connection object req the HttpRequest obejct need to be sent Returns return server response public staticHttpResponserequest(String method,String url,Object headers) assign requested url, and return Parameters method define http request method, such as: GET, POST url assigned url，has to be full url with root path headers define http request header，default is None Returns reutrn server response public staticHttpResponserequest(String method,String url,SeekableStreambody,Object headers) Request the specified url, and get the response. Parameters method define http method, such as: GET, POST url assigned url，has to be full url with root path body define http body content headers define http request header，default is None Returns reutrn server response public staticHttpResponserequest(String method,String url,SeekableStreambody,Mapheaders) Request the specified url, and get the response. Parameters method define http method, such as: GET, POST url assigned url，has to be full url with root path body define http body content headers define http request header, default is None Returns reutrn server response public staticHttpResponserequest(String method,String url,Bufferbody,Object headers) Request the specified url, and get the response. Parameters method define http method, such as: GET, POST url assigned url，has to be full url with root path body define http body content headers define http request header, default is None Returns reutrn server response public staticHttpResponseget(String url,Object headers) reuqest url with GET method，and return response，same as request(&amp;ldquo;GET&amp;rdquo;, &amp;hellip;) Parameters url assigned url，has to be full url with root path headers define http request header，default is None Returns reutrn server response public staticHttpResponsepost(String url,SeekableStreambody,Object headers) reuqest url with POST method，and return response，same as request(&amp;ldquo;POST&amp;rdquo;, &amp;hellip;) Parameters url assigned url，has to be full url with root path body define http body content headers define http request header，default is None Returns reutrn server response public staticHttpResponsepost(String url,Bufferbody,Object headers) reuqest url with POST method，and return response，same as request(&amp;ldquo;POST&amp;rdquo;, &amp;hellip;) Parameters url assigned url，has to be full url with root path body define http body content headers define http request header，default is None Returns reutrn server response "
},
{
	"uri": "http://example.org/module/iconv/",
	"title": "iconv",
	"tags": [],
	"description": "iconv Module with encode and decode operations between text and binary.",
	"content": "iconv Module with encode and decode operations between text and binary. to use: var encoding = require(&#39;encoding&#39;); var iconv = encoding.iconv; or: var iconv = require(&#39;iconv&#39;); Summary Members Descriptions public staticBufferencode(String charset,String data) Convert text to binary with iconv. public static Stringdecode(String charset,Bufferdata) Convert binary to text with iconv. Members public staticBufferencode(String charset,String data) Convert text to binary with iconv. Parameters charset The charset to be use. data The text to be converted. Returns The binary encoded result. public static Stringdecode(String charset,Bufferdata) Convert binary to text with iconv. Parameters charset The charset to be use. data Binary to be converted. Returns The text decoded result. "
},
{
	"uri": "http://example.org/module/io/",
	"title": "io",
	"tags": [],
	"description": "IO module.",
	"content": "IO module. To use it: var io = require(&#39;io&#39;); Summary Members Descriptions public staticMemoryStreamnewMemoryStream() Create a memory stream, see MemoryStream. public staticBufferedStreamnewBufferedStream() Create a buffered read stream, see BufferedStream. Members public staticMemoryStreamnewMemoryStream() Create a memory stream, see MemoryStream. public staticBufferedStreamnewBufferedStream() Create a buffered read stream, see BufferedStream. "
},
{
	"uri": "http://example.org/module/json/",
	"title": "json",
	"tags": [],
	"description": "Json module with encode and decode operations.",
	"content": "json module with encode and decode operations. to use: var encoding = require(&#39;encoding&#39;); var json = encoding.json; or: var json = require(&#39;json&#39;); Summary Members Descriptions public static Stringencode(Value data) Encode a json variable to string with json format. public static Valuedecode(String data) Decode a string variable to json with json format. Members public static Stringencode(Value data) Encode a json variable to string with json format. Parameters data Value to be encoded. Returns The encoded string result. public static Valuedecode(String data) Decode a string variable to json with json format. Parameters data String to be decoded. Returns Json value decoded result. "
},
{
	"uri": "http://example.org/module/mq/",
	"title": "mq",
	"tags": [],
	"description": "Message queue module.",
	"content": "Message queue module. Summary Members Descriptions public staticHandlerjsHandler(Value hdlr) Create a javascript message handler, return immediately when pass by value. public staticAsyncWaitawait() Create async handler. public staticHandlernullHandler() Create a empty handler. public static staticinvoke(Handlerhdlr,objectv) Invoke a message or object to given handler. Members public staticHandlerjsHandler(Value hdlr) Create a javascript message handler, return immediately when pass by value. Parameters hdlr builtin handler, function or javascript mapping object, handler will map be mapped automatically Returns Return handler of handle function Syntax: function func(v){ } Parameter v is the message to procee, there are three possibilities: Object javascript object, used for mapping message Function javascript function, used for next stage Handler Builtin handler for next stage No return or other result will finish message processing. Use message mapping handler to handle nested logic as follows: hdlr = mq.jsHandler({ // fun1 fun1 : function(v){}, sub : { // sub.fun2 or sub/fun2 fun2 : function(v){}, // sub.hdlr or sub/hdlr hdlr: myHandler } }); In the example, fun1 and fun2 are normal javascript handle function, sub is a sub-object, myHandler is a handler public staticAsyncWaitawait() Create async handler. Returns Return created handler Wait handler async as follows: function func(v){ var await = mq.await(); call_some_async_func(v1, v2, v3, function() { await.end(); }); return await; } Example uses javascript message handle function, when it returns, message handle engine will wait for await until await.end being called. public staticHandlernullHandler() Create a empty handler. Returns Return empry handler public static staticinvoke(Handlerhdlr,objectv) Invoke a message or object to given handler. Parameters hdlr Handler to operate v Message or object Unlike invoke method of handler, this will loop and wait every handler until reach null "
},
{
	"uri": "http://example.org/module/net/",
	"title": "net",
	"tags": [],
	"description": "Network module.",
	"content": "Network module. Used for create and operate netwrok resource, to use it: var net = require(&#39;net&#39;); Summary Members Descriptions public static Stringresolve(String name,Integer family) Resolve address of given host. public static Stringip(String name) Quick query host address, same as resolve(name) public static Stringipv6(String name) Quick query host ipv6 address, same as resolve(name, net.AF_INET6) public staticStreamconnect(String host,Integer port,Integer family) Create a Socket object and make connection, see Socket. public staticStreamconnect(String url) Create a Socket or SslSocket and make connection. public staticSmtpopenSmtp(String host,Integer port,Integer family) Create a Smtp object and make connection, see Smtp. public static Stringbackend() Get system backend async network engine. Members public static Stringresolve(String name,Integer family) Resolve address of given host. Parameters name Home name family Return type, default is AF_INET Returns Return IP result string public static Stringip(String name) Quick query host address, same as resolve(name) Parameters name Host name Returns Return IP result string public static Stringipv6(String name) Quick query host ipv6 address, same as resolve(name, net.AF_INET6) Parameters name Host name Returns Return IPv6 result string public staticStreamconnect(String host,Integer port,Integer family) Create a Socket object and make connection, see Socket. Parameters host Target address or host name port Target port number family Addree type, default is AF_INE, ipv4 Returns Return connected Socket object public staticStreamconnect(String url) Create a Socket or SslSocket and make connection. Parameters url URL with protocol, can be tcp://host:port or ssl://host:port Returns Return connected Socket or SslSocket object public staticSmtpopenSmtp(String host,Integer port,Integer family) Create a Smtp object and make connection, see Smtp. Parameters host Target address or host name port Target port number family Addree type, default is AF_INE, ipv4 Returns Return connected Smtp object public static Stringbackend() Get system backend async network engine. Returns Return network engine name "
},
{
	"uri": "http://example.org/module/os/",
	"title": "os",
	"tags": [],
	"description": "Operating system and file system module.",
	"content": "Operating system and file system module. To use it: var os = require(&#39;os&#39;); Summary Members Descriptions public static Numberuptime() Get operating system time in seconds. public static Arrayloadavg() Get system load average, 1, 5 and 15 minutes. public static Longtotalmem() Get system total memory in bytes. public static Longfreemem() Get system free memory in bytes. public static ArrayCPUInfo() Get system CPU number and information. public static IntegerCPUs() Get system CPU number. public static ObjectnetworkInfo() Get system network information. public static Datetime(String tmString) Parse or get system time. public static DatedateAdd(Date d,Integer num,String part) Time calculation function, use part to indicate time. public static ObjectmemoryUsage() Get current memory usage. Members public static Numberuptime() Get operating system time in seconds. Returns Return time in integer public static Arrayloadavg() Get system load average, 1, 5 and 15 minutes. Returns Return results array public static Longtotalmem() Get system total memory in bytes. Returns Return total memory public static Longfreemem() Get system free memory in bytes. Returns Return free memory public static ArrayCPUInfo() Get system CPU number and information. Returns Return CPU information array public static IntegerCPUs() Get system CPU number. Returns Return CPU number public static ObjectnetworkInfo() Get system network information. Returns Return network information public static Datetime(String tmString) Parse or get system time. Parameters tmString Time format, default is query current time Returns Return javascript Date object public static DatedateAdd(Date d,Integer num,String part) Time calculation function, use part to indicate time. Parameters d Date object to calculate on num Number to calculate part Type to calculate, can be &amp;ldquo;year&amp;rdquo;, &amp;ldquo;month&amp;rdquo;, &amp;ldquo;day&amp;rdquo;, &amp;ldquo;hour&amp;rdquo;, &amp;ldquo;minute&amp;rdquo;, &amp;ldquo;second&amp;rdquo; Returns Return javascript Date object public static ObjectmemoryUsage() Get current memory usage. Returns Return memory usage Usage includes: { &amp;quot;rss&amp;quot;: 8622080, &amp;quot;heapTotal&amp;quot;: 4083456, &amp;quot;heapUsed&amp;quot;: 1621800, &amp;quot;nativeObjects&amp;quot;: 122 } Notes: rss Physical memory being occupied by current process heapTotal Return v8 engine heap memory size heapUsed Return v8 engine heap memory size in use nativeObjects Return number of memory objects "
},
{
	"uri": "http://example.org/module/path/",
	"title": "path",
	"tags": [],
	"description": "File path module.",
	"content": "File path module. To use it: var path = require(&#39;path&#39;); Summary Members Descriptions public static Stringnormalize(String path) Normalize path. public static Stringbasename(String path,String ext) Get file name in path, ignore extension with file has it. public static Stringextname(String path) Get file extension. public static Stringdirname(String path) Get directory in path. public static Stringfullpath(String path) Get full path. public static Stringjoin(...) Merge multiple paths to a single relative path. public static Stringresolve(...) Merge multiple paths to a single absolute path. Members public static Stringnormalize(String path) Normalize path. Parameters path Original path Returns Return normalized path public static Stringbasename(String path,String ext) Get file name in path, ignore extension with file has it. Parameters path Original path ext Given extension Returns Return file name public static Stringextname(String path) Get file extension. Parameters path Original path Returns Return file extension public static Stringdirname(String path) Get directory in path. Parameters path Original path Returns Return directory public static Stringfullpath(String path) Get full path. Parameters path Original path Returns Return full path public static Stringjoin(...) Merge multiple paths to a single relative path. Parameters ... One or more relative paths Returns Return new relative path public static Stringresolve(...) Merge multiple paths to a single absolute path. Parameters ... One or more relative paths Returns Return new absolute path "
},
{
	"uri": "http://example.org/module/process/",
	"title": "process",
	"tags": [],
	"description": "Process handle module, to manage current process resources.",
	"content": "Process handle module, to manage current process resources. To use it: var process = require(&#39;process&#39;); Summary Members Descriptions public static Integerumask(Integer mask) change the current umask，Windows does&amp;rsquo;t support this. public static Integerumask(String mask) change the current umask，Windows does&amp;rsquo;t support this. public static Integerumask() return the current umask，Windows does&amp;rsquo;t support this. public static staticexit(Integer code) Exit current process, and return result. public static Stringcwd() Return current work path of the operating system. public static staticchdir(String directory) Change the current work path of operating system. public static Numberuptime() returns the system uptime in number of seconds. public static ObjectmemoryUsage() Get report of memory the current process consumpt. public static staticnextTick(Function func,...) start a fiber public staticSubProcessopen(String command,Array args,Object opts) Create chlid process taking charge of stdin and stdout and run bash command. public staticSubProcessopen(String command,Object opts) Create chlid process taking charge of stdin and stdout and run bash command. public staticSubProcessstart(String command,Array args,Object opts) Create chlid process and run bash command. public staticSubProcessstart(String command,Object opts) Create chlid process and run bash command. public static Integerrun(String command,Array args,Object opts) Run bash command and return result code. public static Integerrun(String command,Object opts) Run bash command and return result code. Members public static Integerumask(Integer mask) change the current umask，Windows does&amp;rsquo;t support this. Parameters mask the mask to set Returns the previous mask public static Integerumask(String mask) change the current umask，Windows does&amp;rsquo;t support this. Parameters mask octonary string(e.g: &amp;ldquo;0664&amp;rdquo;) Returns the previous mask public static Integerumask() return the current umask，Windows does&amp;rsquo;t support this. Returns the current mask public static staticexit(Integer code) Exit current process, and return result. Parameters code result of process. public static Stringcwd() Return current work path of the operating system. Returns Work path. public static staticchdir(String directory) Change the current work path of operating system. Parameters directory The new work path. public static Numberuptime() returns the system uptime in number of seconds. Returns seconds public static ObjectmemoryUsage() Get report of memory the current process consumpt. Returns Memory report object. Memory report like this: { &amp;quot;rss&amp;quot;: 8622080, &amp;quot;heapTotal&amp;quot;: 4083456, &amp;quot;heapUsed&amp;quot;: 1621800 } among the report： rss Occupation of physical memory. heapTotal Total heap memory of v8. heapUsed Heap memory occupied by v8. public static staticnextTick(Function func,...) start a fiber Parameters func function to be executed in the new fiber. ... params which will be passed to the func. public staticSubProcessopen(String command,Array args,Object opts) Create chlid process taking charge of stdin and stdout and run bash command. Parameters command Bash command to be executed. args Arguments for bash command. opts Option of child process, such as: { &amp;quot;timeout&amp;quot;: 100, // unit ms &amp;quot;envs&amp;quot;: [] // Enviroment variable of child process. } Returns Child process object containing result of command. public staticSubProcessopen(String command,Object opts) Create chlid process taking charge of stdin and stdout and run bash command. Parameters command Bash command. opts Option of child process, such as: { &amp;quot;timeout&amp;quot;: 100, // unit ms &amp;quot;envs&amp;quot;: [] // Environment variable of child process. } Returns Child process object containing result of command. public staticSubProcessstart(String command,Array args,Object opts) Create chlid process and run bash command. Parameters command Bash command. args Arguments of bash command. opts Option of child process, such as: { &amp;quot;timeout&amp;quot;: 100, // unit ms &amp;quot;envs&amp;quot;: [] // Environment variable of child process. } Returns Child process object containing result of the command. public staticSubProcessstart(String command,Object opts) Create chlid process and run bash command. Parameters command Bash command. opts Option of child process, such as: { &amp;quot;timeout&amp;quot;: 100, // unit ms &amp;quot;envs&amp;quot;: [] // Environment variable of child process. } Returns Child process object containing result of the command. public static Integerrun(String command,Array args,Object opts) Run bash command and return result code. Parameters command Bash command. args Arguments of bash command. opts Option of child process, such as: { &amp;quot;timeout&amp;quot;: 100, // unit ms &amp;quot;envs&amp;quot;: [] // Environment variable of child process. } Returns Result code of bash command. public static Integerrun(String command,Object opts) Run bash command and return result code. Parameters command Bash command. opts Option of child process, such as: { &amp;quot;timeout&amp;quot;: 100, // unit ms &amp;quot;envs&amp;quot;: [] // Environment variable of child process. } Returns Result code of bash command. "
},
{
	"uri": "http://example.org/module/profiler/",
	"title": "profiler",
	"tags": [],
	"description": "Memory profiler module.",
	"content": "Memory profiler module. The way to use: var profiler = require(&#39;profiler&#39;); Summary Members Descriptions public static staticsaveSnapshot(String fname) Save a HeapSnapshot with the specified name. public staticHeapSnapshotloadSnapshot(String fname) Load a HeapSnapshot with the specified name. public staticHeapSnapshottakeSnapshot() Get the current HeapSnapshot, HeapSnapshots record the state of the JS heap at some moment. public static staticDeleteAllHeapSnapshots() Delete all HeapSnapshots. Members public static staticsaveSnapshot(String fname) Save a HeapSnapshot with the specified name. Parameters fname HeapSnapshot name. public staticHeapSnapshotloadSnapshot(String fname) Load a HeapSnapshot with the specified name. Parameters fname HeapSnapshot name. Returns Return the HeapSnapshot loaded. public staticHeapSnapshottakeSnapshot() Get the current HeapSnapshot, HeapSnapshots record the state of the JS heap at some moment. Returns Returns the acquired HeapSnapshots. public static staticDeleteAllHeapSnapshots() Delete all HeapSnapshots. "
},
{
	"uri": "http://example.org/module/re/",
	"title": "re",
	"tags": [],
	"description": "Regexp module.",
	"content": "Regexp module. Summary Members Descriptions public staticRegexcompile(String pattern,String opt) Compile and return a template of regexp. Members public staticRegexcompile(String pattern,String opt) Compile and return a template of regexp. Parameters pattern Regexp pattern opt Match type, can be &amp;ldquo;g&amp;rdquo;, &amp;ldquo;i&amp;rdquo; or &amp;ldquo;gi&amp;rdquo; Returns Return regexp object "
},
{
	"uri": "http://example.org/module/ssl/",
	"title": "ssl",
	"tags": [],
	"description": "ssl/tls module",
	"content": "ssl/tls module Summary Members Descriptions public staticSslSocketnewSocket() Create a SslSocket object, see SslSocket. public staticSslHandlernewHandler() Create a SslHandler object, see SslHandler. public staticSslServernewServer() Create a SslServer object, see SslServer. public staticStreamconnect(String url) Create a SslSocket and make connection. public static staticsetClientCert(X509Certcrt,PKeykey) Set the default client certificate. public static staticloadClientCertFile(String crtFile,String keyFile,String password) Load the default client certificate from a file. Members public staticSslSocketnewSocket() Create a SslSocket object, see SslSocket. public staticSslHandlernewHandler() Create a SslHandler object, see SslHandler. public staticSslServernewServer() Create a SslServer object, see SslServer. public staticStreamconnect(String url) Create a SslSocket and make connection. Parameters url Specify URL and protocol, e.g.: ssl://host:port Returns Return SslSocket when succeed public static staticsetClientCert(X509Certcrt,PKeykey) Set the default client certificate. Parameters crt 509Cert certificate for client authentication server. key PKey The private key for the client session. public static staticloadClientCertFile(String crtFile,String keyFile,String password) Load the default client certificate from a file. Parameters crtFile X509Cert certificate file for client authentication server. keyFile PKey private key file for the client session. password Decryption password "
},
{
	"uri": "http://example.org/module/test/",
	"title": "test",
	"tags": [],
	"description": "Test Suite module that defines the test suite management.",
	"content": "Test Suite module that defines the test suite management. To use it: var test = require(&#39;test&#39;); Summary Members Descriptions public static staticdescribe(String name,Function block) The definition of a test module and can be nested definition. public static staticxdescribe(String name,Function block) The definition of a test module to be stopped. public static staticit(String name,Function block) Define a test project. public static staticxit(String name,Function block) Prohibit test project definition. public static staticbefore(Function func) Define the incident event for current test module. public static staticafter(Function func) Define the exit event for current test module. public static staticbeforeEach(Function func) Define the incident event for current test project. public static staticafterEach(Function func) Define the exit event for current test project. public static Integerrun(Integer loglevel) Module to start executing definition. public staticExpectexpect(Value actual,String msg) expect Grammar test engine public static staticsetup(Integer mode) The current test environment initialization script, the test module method to copy a global variable for the current script. Members public static staticdescribe(String name,Function block) The definition of a test module and can be nested definition. Parameters name Module name block Initial code public static staticxdescribe(String name,Function block) The definition of a test module to be stopped. Parameters name Module name block Initial code public static staticit(String name,Function block) Define a test project. Parameters name Project name block Test block public static staticxit(String name,Function block) Prohibit test project definition. Parameters name Project name block Test block public static staticbefore(Function func) Define the incident event for current test module. Parameters func Event handler public static staticafter(Function func) Define the exit event for current test module. Parameters func Event handler public static staticbeforeEach(Function func) Define the incident event for current test project. Parameters func Event handler public static staticafterEach(Function func) Define the exit event for current test project. Parameters func Event handler public static Integerrun(Integer loglevel) Module to start executing definition. Parameters loglevel Log output level is specified when tested, ERROR, the project focused on the report the error message is displayed, below ERROR, output information displayed at any time, while higher than ERROR, display only reports Returns Return the statistical result of test case, return 0 when meet no error, return the error number of errors. public staticExpectexpect(Value actual,String msg) expect Grammar test engine Parameters actual Value to test msg Message when error occurs Returns Return Expect for chain operations public static staticsetup(Integer mode) The current test environment initialization script, the test module method to copy a global variable for the current script. Parameters mode Indicates initial mode, default is BDD "
},
{
	"uri": "http://example.org/module/util/",
	"title": "util",
	"tags": [],
	"description": "Common tools module.",
	"content": "Common tools module. Summary Members Descriptions public static Stringformat(String fmt,...) Format string with variables. public static Stringformat(...) Format variables. public static BooleanisEmpty(Value v) Check if variable is empty(no enumerable property) public static BooleanisArray(Value v) Check if variable is an array. public static BooleanisBoolean(Value v) Check if variable is Boolean. public static BooleanisNull(Value v) Check if variable is Null. public static BooleanisNullOrUndefined(Value v) Check if variable is Null or Undefined. public static BooleanisNumber(Value v) Check if variable is a number. public static BooleanisString(Value v) Check if variable is a string. public static BooleanisUndefined(Value v) Check if variable is Undefined. public static BooleanisRegExp(Value v) Check if variable is a regexp object. public static BooleanisObject(Value v) Check if variable is an object. public static BooleanisDate(Value v) Check if variable is date object. public static BooleanisFunction(Value v) Check if variable is a function. public static BooleanisBuffer(Value v) Check if variable is a Buffer object. public static Booleanhas(Value v,String key) Check if object contains given key. public static Arraykeys(Value v) Get an array of all keys. public static Arrayvalues(Value v) Get an array of all values. public static Valueclone(Value v) Clone a variable, copy internal content if it&amp;rsquo;s an object or array. public static Valueextend(Value v,...) Extend one or more values of objects to given object. public static Objectpick(Value v,...) Return a copy of object with filtered attributes. public static Objectomit(Value v,...) Return a copy of object, exclude given attributes. public static Valuefirst(Value v) Get first element in array. public static Valuefirst(Value v,Integer n) Get first number of elements in array. public static Valuelast(Value v) Get last element in array. public static Valuelast(Value v,Integer n) Get number of element in the end of array. public static Arrayunique(Value v,Boolean sorted) Get array without duplicates. public static Arrayunion(...) Union one or more arrays into one unique array. public static Arrayintersection(...) Return intersections of arrays. public static Arrayflatten(Value arr,Boolean shallow) Convert multi-dimension arrays into one-dimension, only reduce one dimension if you pass shallow argument. public static Arraywithout(Value arr,...) Return an array without given elements. public static Arraydifference(Array list,...) Return differences of arrays. public static Valueeach(Value list,Function iterator,Value context) Iterate list in order. If context is passed, then bind iterator to context. Each iteration will pass three arguments to context: element, index and list. public static Arraymap(Value list,Function iterator,Value context) Use iterator to map values to new array. If context is passed, then bind iterator to context. Each iteration will pass three arguments to context: element, index and list. public static Valuereduce(Value list,Function iterator,Value memo,Value context) Reduce every element in list to a single number. If context is passed, then bind iterator to context. Each iteration will pass four arguments to context: memo, element, index and list. public static ObjectbuildInfo() Get current engine and components information. Members public static Stringformat(String fmt,...) Format string with variables. Parameters fmt Format string ... Aeguments Returns Return formatted string public static Stringformat(...) Format variables. Parameters ... Aeguments Returns Return formatted string public static BooleanisEmpty(Value v) Check if variable is empty(no enumerable property) Parameters v Variable to check Returns Return true when it&amp;rsquo;s empty public static BooleanisArray(Value v) Check if variable is an array. Parameters v Variable to check Returns Return true when it&amp;rsquo;s an array public static BooleanisBoolean(Value v) Check if variable is Boolean. Parameters v Variable to check Returns Return true when it&amp;rsquo;s a Boolean public static BooleanisNull(Value v) Check if variable is Null. Parameters v Variable to check Returns Return true when it&amp;rsquo;s Null public static BooleanisNullOrUndefined(Value v) Check if variable is Null or Undefined. Parameters v Variable to check Returns Return true when it&amp;rsquo;s Null or Undefined public static BooleanisNumber(Value v) Check if variable is a number. Parameters v Variable to check Returns Return true when it&amp;rsquo;s a number public static BooleanisString(Value v) Check if variable is a string. Parameters v Variable to check Returns Return true when it&amp;rsquo;s a string public static BooleanisUndefined(Value v) Check if variable is Undefined. Parameters v Variable to check Returns Return true when it&amp;rsquo;s Undefined public static BooleanisRegExp(Value v) Check if variable is a regexp object. Parameters v Variable to check Returns Return true when it&amp;rsquo;s a regexp object public static BooleanisObject(Value v) Check if variable is an object. Parameters v Variable to check Returns Return true when it&amp;rsquo;s an object public static BooleanisDate(Value v) Check if variable is date object. Parameters v Variable to check Returns Return true when it&amp;rsquo;s date object public static BooleanisFunction(Value v) Check if variable is a function. Parameters v Variable to check Returns Return true when it&amp;rsquo;s a function public static BooleanisBuffer(Value v) Check if variable is a Buffer object. Parameters v Variable to check Returns Return true when it&amp;rsquo;s a Buffer object public static Booleanhas(Value v,String key) Check if object contains given key. Parameters v Object to check key Key to query Returns Return true when it contains key public static Arraykeys(Value v) Get an array of all keys. Parameters v Object to check Returns Return an array of all keys public static Arrayvalues(Value v) Get an array of all values. Parameters v Object to check Returns Return an array of all keys public static Valueclone(Value v) Clone a variable, copy internal content if it&amp;rsquo;s an object or array. Parameters v Variable to clone Returns Return cloned result public static Valueextend(Value v,...) Extend one or more values of objects to given object. Parameters v Object to be extended ... One or more objects to extend Returns Return extended object public static Objectpick(Value v,...) Return a copy of object with filtered attributes. Parameters v Object to filter ... One or more attributes Returns Return copy of object public static Objectomit(Value v,...) Return a copy of object, exclude given attributes. Parameters v Object to filter ... One or more attributes to exclude Returns Return copy of object public static Valuefirst(Value v) Get first element in array. Parameters v Array to access Returns Return element public static Valuefirst(Value v,Integer n) Get first number of elements in array. Parameters v Array to access n Number of elements to get Returns Return array of elements public static Valuelast(Value v) Get last element in array. Parameters v Array to access Returns Return element public static Valuelast(Value v,Integer n) Get number of element in the end of array. Parameters v Array to access n Number of elements to get Returns Return array of elements public static Arrayunique(Value v,Boolean sorted) Get array without duplicates. Parameters v Array to access sorted Indicates whether to sort or not, will use quick sort Returns Return unique array public static Arrayunion(...) Union one or more arrays into one unique array. Parameters ... Arrays to union Returns Return unioned array public static Arrayintersection(...) Return intersections of arrays. Parameters ... Arrays to check Returns Return intersections public static Arrayflatten(Value arr,Boolean shallow) Convert multi-dimension arrays into one-dimension, only reduce one dimension if you pass shallow argument. Parameters arr Array to convert shallow Indicates whether to reduce only one dimension or not, default is false Returns Return converted array public static Arraywithout(Value arr,...) Return an array without given elements. Parameters arr Array to access ... Elements to exclude Returns Return result array public static Arraydifference(Array list,...) Return differences of arrays. Parameters list Arrays to check Returns Return differences public static Valueeach(Value list,Function iterator,Value context) Iterate list in order. If context is passed, then bind iterator to context. Each iteration will pass three arguments to context: element, index and list. Parameters list List or object to iterate iterator Iterator callback context Context object for binding Returns Return list itself public static Arraymap(Value list,Function iterator,Value context) Use iterator to map values to new array. If context is passed, then bind iterator to context. Each iteration will pass three arguments to context: element, index and list. Parameters list List or object to iterate iterator Iterator callback context Context object for binding Returns Return result array public static Valuereduce(Value list,Function iterator,Value memo,Value context) Reduce every element in list to a single number. If context is passed, then bind iterator to context. Each iteration will pass four arguments to context: memo, element, index and list. Parameters list List or object to iterate iterator Iterator callback memo Initial value context Context object for binding Returns Return result array public static ObjectbuildInfo() Get current engine and components information. Returns Struct info: { &amp;quot;fibjs&amp;quot;: &amp;quot;0.1.0&amp;quot;, &amp;quot;svn&amp;quot;: 1753, &amp;quot;build&amp;quot;: &amp;quot;Dec 10 2013 21:44:17&amp;quot;, &amp;quot;vender&amp;quot;: { &amp;quot;ev&amp;quot;: &amp;quot;4.11&amp;quot;, &amp;quot;exif&amp;quot;: &amp;quot;0.6.21&amp;quot;, &amp;quot;gd&amp;quot;: &amp;quot;2.1.0-alpha&amp;quot;, &amp;quot;jpeg&amp;quot;: &amp;quot;8.3&amp;quot;, &amp;quot;log4cpp&amp;quot;: &amp;quot;1.0&amp;quot;, &amp;quot;mongo&amp;quot;: &amp;quot;0.7&amp;quot;, &amp;quot;pcre&amp;quot;: &amp;quot;8.21&amp;quot;, &amp;quot;png&amp;quot;: &amp;quot;1.5.4&amp;quot;, &amp;quot;sqlite&amp;quot;: &amp;quot;3.8.1&amp;quot;, &amp;quot;tiff&amp;quot;: &amp;quot;3.9.5&amp;quot;, &amp;quot;uuid&amp;quot;: &amp;quot;1.6.2&amp;quot;, &amp;quot;v8&amp;quot;: &amp;quot;3.23.17 (candidate)&amp;quot;, &amp;quot;zlib&amp;quot;: &amp;quot;1.2.7&amp;quot;, &amp;quot;zmq&amp;quot;: &amp;quot;3.1&amp;quot; } } "
},
{
	"uri": "http://example.org/module/uuid/",
	"title": "uuid",
	"tags": [],
	"description": "uuid unique id module.",
	"content": "uuid unique id module Fundamental module, used for create uuid var uuid = require(&#39;uuid&#39;); Summary Members Descriptions public staticuuidValueuuid(String s) Generate uuid by given string. public staticuuidValueuuid(Bufferdata) Generate uuid by given binary data. public staticuuidValuenode() Generate uuid by time and host name. public staticuuidValuemd5(Integer ns,String name) Generate uuid by given md5. public staticuuidValuerandom() Generate uuid randomly. public staticuuidValuesha1(Integer ns,String name) Generate uuid by given sha1. Members public staticuuidValueuuid(String s) Generate uuid by given string. Parameters s String to describe uuid Returns Return uuidValue object public staticuuidValueuuid(Bufferdata) Generate uuid by given binary data. Parameters data Data to describe uuid Returns Return uuidValue object public staticuuidValuenode() Generate uuid by time and host name. Returns Return uuidValue object public staticuuidValuemd5(Integer ns,String name) Generate uuid by given md5. Parameters ns Namespace, can be uuid.DNS, uuid.URL, uuid.OID, and uuid.X509 name Name of uuid Returns Return uuidValue object public staticuuidValuerandom() Generate uuid randomly. Returns Return uuidValue object public staticuuidValuesha1(Integer ns,String name) Generate uuid by given sha1. Parameters ns Namespace, can be uuid.DNS, uuid.URL, uuid.OID, and uuid.X509 name Name of uuid Returns Return uuidValue object "
},
{
	"uri": "http://example.org/module/vm/",
	"title": "vm",
	"tags": [],
	"description": "Safe SandBox module, to isolate runtime based on safety level.",
	"content": "Safe SandBox module, to isolate runtime based on safety level. By establishing a safe SandBox, you can limit the accessible resources when the script runs, and isolate different script execution environment, also can be customized for different environments base module to ensure the safety of the overall operating environment. Following example demonstrates a sandbox which is only allowed for accessing assert module, and add a and b as customized modules. var vm = require(&#39;vm&#39;); var sbox = new vm.SandBox({ a: 100, b: 200, assert: require(&#39;assert&#39;) }); var mod_in_sbox = sbox.require(&#39;./path/to/mod&#39;); Summary Members Descriptions public staticSandBoxnewSandBox() Create a SandBox object, see SandBox. Members public staticSandBoxnewSandBox() Create a SandBox object, see SandBox. "
},
{
	"uri": "http://example.org/module/websocket/",
	"title": "websocket",
	"tags": [],
	"description": "websocket support module.",
	"content": "websocket support module To use it: var websocket = require(&#39;websocket&#39;); Summary Members Descriptions public staticWebSocketMessagenewMessage() Create one websocket message object, refer WebSocketMessage. public staticWebSocketHandlernewHandler() Create one websocket packet protocol conversion processor, refer WebSocketHandler. public staticStreamconnect(String url) Create one websocket connection, and return a completed connection Stream object. Members public staticWebSocketMessagenewMessage() Create one websocket message object, refer WebSocketMessage. public staticWebSocketHandlernewHandler() Create one websocket packet protocol conversion processor, refer WebSocketHandler. public staticStreamconnect(String url) Create one websocket connection, and return a completed connection Stream object. Parameters url Specifies the connection url，support ws:// and wss:// protocol Returns Return a completed connection Stream object, which can be Socket or SslSocket "
},
{
	"uri": "http://example.org/module/xml/",
	"title": "xml",
	"tags": [],
	"description": "xml module.",
	"content": "xml module Summary Members Descriptions public staticXmlDocumentnewDocument() xml document object, see XmlDocument object public staticXmlDocumentparse(String source,String type) Parse xml/html text and create XmlDocument object, does not support multiple languages. public staticXmlDocumentparse(Buffersource,String type) Parse xml/html and create XmlDocument object, convert by given language. public static Stringserialize(XmlNodenode) Serialize XmlNode to string. Members public staticXmlDocumentnewDocument() xml document object, see XmlDocument object public staticXmlDocumentparse(String source,String type) Parse xml/html text and create XmlDocument object, does not support multiple languages. Parameters source xml/html text to parse type Indicates text type, default is text/xml, and can be text/html as well Returns Return created XmlDocument object public staticXmlDocumentparse(Buffersource,String type) Parse xml/html and create XmlDocument object, convert by given language. Parameters source xml/html text to parse type Indicates text type, default is text/xml, and can be text/html as well Returns Return created XmlDocument object public static Stringserialize(XmlNodenode) Serialize XmlNode to string. Parameters node XmlNode to serialize Returns Return serialized string "
},
{
	"uri": "http://example.org/module/zip/",
	"title": "zip",
	"tags": [],
	"description": "Zip file processing module.",
	"content": "Zip file processing module. It can be used to compress and decompress file into or from zip file. The way to use： var zip = require(&#39;zip&#39;); Summary Members Descriptions public static BooleanisZipFile(String filename) Judge if the file is zip file. public staticZipFileopen(String path,String mod,Integer compress_type) Open a zip file. public staticZipFileopen(Bufferdata,String mod,Integer compress_type) Open buffer of zip file data. public staticZipFileopen(SeekableStreamstrm,String mod,Integer compress_type) Open stream of zip file data. Members public static BooleanisZipFile(String filename) Judge if the file is zip file. Parameters filename to be judged. Returns Judge result, true means yes. public staticZipFileopen(String path,String mod,Integer compress_type) Open a zip file. Parameters path The path of file to be opened. mod File open mode, &amp;ldquo;r&amp;rdquo; means read only, &amp;ldquo;w&amp;rdquo; means create and overwrite if the file exists, &amp;ldquo;a&amp;rdquo; means append after the zip file. compress_type Compress type, ZIP_STORED means no compress and for storage only. The default parameter is ZIP_DEFLATED, it depends on library zlib in compressing. Returns The zip file object. public staticZipFileopen(Bufferdata,String mod,Integer compress_type) Open buffer of zip file data. Parameters data Buffer of zip file data. mod File open mode, &amp;ldquo;r&amp;rdquo; means read only, &amp;ldquo;w&amp;rdquo; means create and overwrite if the file exists, &amp;ldquo;a&amp;rdquo; means append after the zip file. compress_type Compress type, ZIP_STORED means no compress and for storage only. The default parameter is ZIP_DEFLATED, it depends on library zlib in compressing. Returns The zip file object. public staticZipFileopen(SeekableStreamstrm,String mod,Integer compress_type) Open stream of zip file data. Parameters strm Stream of zip file data. mod File open mode, &amp;ldquo;r&amp;rdquo; means read only, &amp;ldquo;w&amp;rdquo; means create and overwrite if the file exists, &amp;ldquo;a&amp;rdquo; means append after the zip file. compress_type Compress type, ZIP_STORED means no compress and for storage only. The default parameter is ZIP_DEFLATED, it depends on library zlib in compressing. Returns The zip file object. "
},
{
	"uri": "http://example.org/module/zlib/",
	"title": "zlib",
	"tags": [],
	"description": "zlib compression and decompression module",
	"content": "zlib compression and decompression module To use it: var zlib = require(&#39;zlib&#39;); Summary Members Descriptions public staticBufferdeflate(Bufferdata,Integer level) Use deflate to compress data (zlib format) public static staticdeflateTo(Bufferdata,Streamstm,Integer level) Use deflate to compress data to stream (zlib format) public static staticdeflateTo(Streamsrc,Streamstm,Integer level) Use deflate to compress a stream data to another (zlib format) public staticBufferinflate(Bufferdata) Use deflate to decompress data (zlib format) public static staticinflateTo(Bufferdata,Streamstm) Use deflate to decompress data to stream (zlib format) public static staticinflateTo(Streamsrc,Streamstm) Use deflate to decompress a stream data to another (zlib format) public staticBuffergzip(Bufferdata) Use gzip to compress data. public static staticgzipTo(Bufferdata,Streamstm) Use gzip to compress data to stream. public static staticgzipTo(Streamsrc,Streamstm) Use gzip to compress a stream data to another. public staticBuffergunzip(Bufferdata) Use gzip to decompress data. public static staticgunzipTo(Bufferdata,Streamstm) Use gzip to decompress data to stream. public static staticgunzipTo(Streamsrc,Streamstm) Use gzip to decompress a stream data to another. public staticBufferdeflateRaw(Bufferdata,Integer level) Use deflate to compress data (deflateRaw) public static staticdeflateRawTo(Bufferdata,Streamstm,Integer level) Use deflate to compress data to stream (deflateRaw) public static staticdeflateRawTo(Streamsrc,Streamstm,Integer level) Use deflate to compress a stream data to another (deflateRaw) public staticBufferinflateRaw(Bufferdata) Use deflate to decompress data (deflateRaw) public static staticinflateRawTo(Bufferdata,Streamstm) Use deflate to decompress data to stream (deflateRaw) public static staticinflateRawTo(Streamsrc,Streamstm) Use deflate to decompress a stream data to another (deflateRaw) Members public staticBufferdeflate(Bufferdata,Integer level) Use deflate to compress data (zlib format) Parameters data Raw data level Indicate compression level, default is DEFAULT_COMPRESSION Returns Return compressed binary public static staticdeflateTo(Bufferdata,Streamstm,Integer level) Use deflate to compress data to stream (zlib format) Parameters data Raw data stm Stream to write compressed data level Indicate compression level, default is DEFAULT_COMPRESSION public static staticdeflateTo(Streamsrc,Streamstm,Integer level) Use deflate to compress a stream data to another (zlib format) Parameters src Original stream stm Target stream to write compressed data level Indicate compression level, default is DEFAULT_COMPRESSION public staticBufferinflate(Bufferdata) Use deflate to decompress data (zlib format) Parameters data Compressed data Returns Return decompressed binary public static staticinflateTo(Bufferdata,Streamstm) Use deflate to decompress data to stream (zlib format) Parameters data Compressed data stm Stream to write decompressed data public static staticinflateTo(Streamsrc,Streamstm) Use deflate to decompress a stream data to another (zlib format) Parameters src Original stream stm Target stream to write decompressed data public staticBuffergzip(Bufferdata) Use gzip to compress data. Parameters data Raw data Returns Return compressed binary public static staticgzipTo(Bufferdata,Streamstm) Use gzip to compress data to stream. Parameters data Raw data stm Stream to write compressed data public static staticgzipTo(Streamsrc,Streamstm) Use gzip to compress a stream data to another. Parameters src Original stream stm Target stream to write compressed data public staticBuffergunzip(Bufferdata) Use gzip to decompress data. Parameters data Compressed data Returns Return decompressed binary public static staticgunzipTo(Bufferdata,Streamstm) Use gzip to decompress data to stream. Parameters data Compressed data stm Stream to write decompressed data public static staticgunzipTo(Streamsrc,Streamstm) Use gzip to decompress a stream data to another. Parameters src Original stream stm Target stream to write decompressed data public staticBufferdeflateRaw(Bufferdata,Integer level) Use deflate to compress data (deflateRaw) Parameters data Raw data level Indicate compression level, default is DEFAULT_COMPRESSION Returns Return compressed binary public static staticdeflateRawTo(Bufferdata,Streamstm,Integer level) Use deflate to compress data to stream (deflateRaw) Parameters data Raw data stm Stream to write compressed data level Indicate compression level, default is DEFAULT_COMPRESSION public static staticdeflateRawTo(Streamsrc,Streamstm,Integer level) Use deflate to compress a stream data to another (deflateRaw) Parameters src Original stream stm Target stream to write compressed data level Indicate compression level, default is DEFAULT_COMPRESSION public staticBufferinflateRaw(Bufferdata) Use deflate to decompress data (deflateRaw) Parameters data Compressed data Returns Return decompressed binary public static staticinflateRawTo(Bufferdata,Streamstm) Use deflate to decompress data to stream (deflateRaw) Parameters data Compressed data stm Stream to write decompressed data public static staticinflateRawTo(Streamsrc,Streamstm) Use deflate to decompress a stream data to another (deflateRaw) Parameters src Original stream stm Target stream to write decompressed data "
}]